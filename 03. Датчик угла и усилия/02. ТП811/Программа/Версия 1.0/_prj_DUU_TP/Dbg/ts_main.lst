C51 COMPILER V7.50   TS_MAIN                                                               03/03/2011 10:22:18 PAGE 1   


C51 COMPILER V7.50, COMPILATION OF MODULE TS_MAIN
OBJECT MODULE PLACED IN .\Dbg\ts_main.obj
COMPILER INVOKED BY: D:\Work\Keil51\C51\BIN\C51.EXE Src\ts_main.c BROWSE DEBUG OBJECTEXTEND PRINT(.\Dbg\ts_main.lst) OBJ
                    -ECT(.\Dbg\ts_main.obj)

line level    source

   1          /********************************************************************************/
   2          /*                                                                              */
   3          /*                     Управляющая программа для Тензо-датчика                  */
   4          /*                          Версия 2.01 (2010.11.14)                            */
   5          /*                                                                              */
   6          /********************************************************************************/
   7          #include "ts_main.h"
   8          /*==============================================================================*/
   9          /*                      Глобальные переменные программы.                        */
  10          /*==============================================================================*/
  11            bit fl_sign;                  // знак коррекции (1 - отнимать)
  12            bit fl_swca;                  // переключатель "коррекция" / "оцифровка"
  13            bit fl_cmd;                   // чужая комманда/данные
  14            bit fl_dev;                   // обращение к основному каналу АЦП
  15            bit fl_ad;                    // событие - конец АЦ преобразования
  16            union u_int VAR;              // врем. хран-е данных
  17            union u_int ADC;              // данные 'ADC'
  18            unsigned int data Badc[NSUM]; // буфер усреднения
  19            unsigned int AIN0_DAT;        // данные "основного" канала АЦП
  20            unsigned int CORR;            // значение коррекции
  21          
  22            unsigned char byte_ndv;       // "номера устройства" - определяется перемычкой
  23            unsigned char COUNT_BOD;      // счетчик БОД
  24          
  25            unsigned char rcom;           // принчтая "команда"
  26          /*==============================================================================*/
  27          /*                                                                              */
  28          /*                         Главная функция программы.                           */
  29          /*                                                                              */
  30          /*==============================================================================*/
  31          void main(void)
  32          {
  33   1      /*==============================================================================*/
  34   1      /*                      Переменные главной  функции.                            */
  35   1      /*==============================================================================*/
  36   1        /*----------------------------------------------------------------------------*/
  37   1        /*                     Инициализируем аппаратуру.                             */
  38   1        /*----------------------------------------------------------------------------*/
  39   1      
  40   1      // Синтезатор рабочей частоты ядра:
  41   1      
  42   1        PLLCON = 0x001;                       // 8388608 герц
  43   1      
  44   1      
  45   1      // Сторожевой таймер:
  46   1      
  47   1        WDWR = 1;                             // разрешение записи в 'WDCON'
  48   1        WDCON = 0x072;                        // enable WDT for 2.0s timeout
  49   1      
  50   1      // Прерывания:  
  51   1      
  52   1        IE = 0x00;                            // запр. все прер-я
  53   1        IP = 0x00;                            // приоритетность
  54   1      
C51 COMPILER V7.50   TS_MAIN                                                               03/03/2011 10:22:18 PAGE 2   

  55   1      /*           SERIAL PORT
  56   1                   -----------  
  57   1      - 9 битовый УАПП (реж.3; скор-ть опр. Ftc1)
  58   1      - SCON.SM2=1 => бит RI не активизируется,
  59   1        если 9-й бит принимаемых данных =0
  60   1      - SCON.REN=1 => прием посл.данных разреш. */
  61   1      
  62   1        SCON = 0x0f0;
  63   1      
  64   1      // Установка таймеров:
  65   1      
  66   1        TCON = 0x00;                          // управл. TIM 1&0
  67   1        TMOD = 0x21;                          // режимы "2/1"
  68   1        TH1 = CONST_BAUD_RATE;                // F(UART)
  69   1        TH0 = CLSTH;                          // F(Тик)
  70   1        TL0 = CLSTL;
  71   1        RCAP2H = CLATH;                       // F(T(ADC))
  72   1        RCAP2L = CLATL;
  73   1      
  74   1      
  75   1      // Конфигурация АЦП:
  76   1      
  77   1        ADCCON1 = 0x09e;                      // power up ADC & enable Timer2 mode
  78   1      //  ADCCON2 = CHAN;                     // выбор канала для АЦП
  79   1      
  80   1      // Конфигурация ЦАП
  81   1        DACCON = 0x01f;                       // both DACs on,12bit,asynchronous
  82   1        DAC1H = UDAC1H;
  83   1        DAC1L = UDAC1L;
  84   1      
  85   1        byte_ndv = P3;                        // YYYX XXYY фиксация перемычки "номер устройства"
  86   1        byte_ndv >>= 2;                       // YYYY YXXX
  87   1        byte_ndv &= 0x07;                     // 0000 0XXX
  88   1        byte_ndv += NDEV;                     // + база
  89   1      
  90   1      // Запуск ...
  91   1      
  92   1        TR0 = 1;                              // запуск TIM0
  93   1        TR1 = 1;                              // запуск TIM1
  94   1        REN = 0;                              // прием по 'RxD' 'OFF'
  95   1        EA = 1;                               // разр.прер.  "ВСЁ"
  96   1      
  97   1        Adc_ini();
  98   1      
  99   1         /*----------------------------------------------------------------------------*/
 100   1         /*                 Основной цикл программы.                                   */
 101   1         /*----------------------------------------------------------------------------*/
 102   1      
 103   1        for(;;)
 104   1        {
 105   2          DIR = 0;    
 106   2          COUNT_BOD = CBOD;                   // счетчик БОД
 107   2          ET0 = 1;                            // пр-я по 'T0' 'ON'
 108   2      
 109   2          do {
 110   3               if (!RXD) COUNT_BOD = CBOD;
 111   3          } while (COUNT_BOD);                // ожидание СИНХРО-ПАУЗЫ
 112   2      
 113   2          ET0 = 0;                            // пр-я по 'T0' 'OFF'
 114   2          RI = 0;                             // очистка флага приема по 'RxD'
 115   2          VAR.du_c[0] = SBUF;                 // очистка буфера приема
 116   2          REN = 1;                            // прием по 'RxD' 'ON'
C51 COMPILER V7.50   TS_MAIN                                                               03/03/2011 10:22:18 PAGE 3   

 117   2      
 118   2      
 119   2          while(!RI);
 120   2          REN = 0;                            // прием по 'RxD' 'OFF'
 121   2          fl_cmd = fl_cmd = 0;
 122   2      
 123   2          if(RB8)
 124   2          {
 125   3            RB8 = 0;
 126   3            fl_cmd = 1;                                    // это "чужой" CMD !
 127   3            rcom = 0x0f & SBUF;
 128   3            if(rcom == byte_ndv)
 129   3              {fl_dev = 1; fl_cmd = 0; REQ_ME = ON_PIN;}   // это "свой"  CMD !
 130   3          }
 131   2      
 132   2          if(fl_cmd) Refr();
 133   2          if(fl_dev) Out_data(AIN0);
 134   2          REQ_ME = OFF_PIN;                               // выключим индикацию обращения   
 135   2        }
 136   1      }
 137          
 138          
 139          /*------------------------------------------------------------------------------*/
 140          /* Функция:    Выводит в UART запрвшиваемый кенал АЦП                           */
 141          /* Принимает:  N канала АЦП (0...8)                                             */
 142          /* Возвращает: ничего                                                           */
 143          /*------------------------------------------------------------------------------*/
 144          void Out_data (unsigned char chnl) {
 145   1        union u_int o_dat;
 146   1        DIR = 1;
 147   1        if(fl_dev) o_dat.du_i = AIN0_DAT;
 148   1        TB8 = 0; SBUF = o_dat.du_c[0]; while (!TI); TI = 0; // старший байт
 149   1        TB8 = 0; SBUF = o_dat.du_c[1]; while (!TI); TI = 0; // младший байт
 150   1        Adc_sw(chnl);
 151   1        if(fl_dev) Add_sum ();
 152   1        fl_dev = 0;
 153   1      }
 154          
 155          /*------------------------------------------------------------------------------*/
 156          /* Функция:    Усредняет данные АЦП за последние NSUM выборок                   */
 157          /* Принимает:  ничего                                                           */
 158          /* Возвращает: ничего                                                           */
 159          /*------------------------------------------------------------------------------*/
 160          void Add_sum (void) {
 161   1        unsigned char count;
 162   1        if(!fl_swca)  // если была коррекция - пропустим !
 163   1        {
 164   2          for (count = 0; count < (NSUM - 1); count++)
 165   2            Badc[count] = Badc[count + 1];
 166   2          Badc[NSUM-1] = ADC.du_i;
 167   2          AIN0_DAT = 0;
 168   2          for (count = 0; count < NSUM; count++)
 169   2            AIN0_DAT += Badc[count];
 170   2          AIN0_DAT = 0x0fff - (AIN0_DAT / NSUM);      // инвертирование
 171   2        }
 172   1      }
 173          
 174          /*------------------------------------------------------------------------------*/
 175          /* Функция:    Обновляет среднее значение АЦП "основного" канала                */
 176          /* Принимает:  ничего                                                           */
 177          /* Возвращает: ничего                                                           */
 178          /*------------------------------------------------------------------------------*/
C51 COMPILER V7.50   TS_MAIN                                                               03/03/2011 10:22:18 PAGE 4   

 179          void Refr(void) {
 180   1        Adc_sw(AIN0);
 181   1        Add_sum();
 182   1        fl_cmd = 0;
 183   1      }
 184          
 185          /*------------------------------------------------------------------------------*/
 186          /* Функция:    Инициализация буфера усреднения                                  */
 187          /* Принимает:  ничего                                                           */
 188          /* Возвращает: ничего                                                           */
 189          /*------------------------------------------------------------------------------*/
 190          void Adc_ini(void) {
 191   1        unsigned char count;
 192   1        DAC0H = 0x00;
 193   1        DAC0L = 0x00;
 194   1        fl_swca = 0;          // сначало коррекция !
 195   1        for (count = 1; count < NSUM; count++)
 196   1        {
 197   2          Adc_sw(AIN0);       // коррекция
 198   2          Adc_sw(AIN0);       // данные
 199   2          Badc[count] = ADC.du_i;
 200   2        }
 201   1        Add_sum();
 202   1      }
 203          
 204          /*------------------------------------------------------------------------------*/
 205          /* Функция:    Переключатель оцифровка / коррекция                              */
 206          /* Принимает:  номер канала АЦП                                                 */
 207          /* Возвращает: ничего                                                           */
 208          /*------------------------------------------------------------------------------*/
 209          void Adc_sw (unsigned char chanell) {
 210   1      
 211   1        Go_adc(chanell);
 212   1        if (chanell == AIN0)
 213   1        {
 214   2          if(!fl_swca)
 215   2          {
 216   3            DAC0H = UDAC0H;   // приняли коррекцию
 217   3            DAC0L = UDAC0L;
 218   3            fl_swca = 1;      // потом будут данные
 219   3            if(ADC.du_i > UDAC1)
 220   3            {
 221   4              CORR = ADC.du_i - UDAC1;
 222   4              fl_sign = 1;    // коррекцию отнимать !
 223   4            }
 224   3            else
 225   3            {
 226   4              CORR = UDAC1 - ADC.du_i;
 227   4              fl_sign = 0;    // коррекцию прибавлять !      
 228   4            }
 229   3          }
 230   2          else
 231   2          {
 232   3            DAC0H = 0;        // приняли данные
 233   3            DAC0L = 0;
 234   3            fl_swca = 0;      // потом будeт коррекция
 235   3            if(fl_sign) ADC.du_i -= CORR;
 236   3            else        ADC.du_i += CORR;
 237   3          }
 238   2        }
 239   1      }
 240          
C51 COMPILER V7.50   TS_MAIN                                                               03/03/2011 10:22:18 PAGE 5   

 241          /*------------------------------------------------------------------------------*/
 242          /* Функция:    Производит АЦП выбранного канала (0...8)                         */
 243          /* Принимает:  номер канала АЦП                                                 */
 244          /* Возвращает: значение в глобальной переменной ADC                             */
 245          /*------------------------------------------------------------------------------*/
 246          void Go_adc (unsigned char chanell) {
 247   1        union u_lng sum;
 248   1        unsigned char count = 0;
 249   1      
 250   1        ADCCON2 = chanell;            // канал АЦП
 251   1        sum.du_l = 0;                 // сумма отсчетов (256)
 252   1        TL2 = CLATL;                  // 6400 Гц
 253   1        TH2 = CLATH;                  // одинаковый старт
 254   1        fl_ad = 1;
 255   1        EADC = 1;                     // разр.пр-я по 'ADC'
 256   1        TR2 = 1;                      // run Timer2
 257   1        do {
 258   2             while(fl_ad);
 259   2             sum.du_l += VAR.du_i;
 260   2             count++;
 261   2             fl_ad = 1;
 262   2           } while (count != 0);
 263   1        EADC = 0;
 264   1        TR2 = 0;
 265   1        ADC.du_c[0] = sum.du_c[1];   // результат =
 266   1        ADC.du_c[1] = sum.du_c[2];   // сумма отсчетов / 256
 267   1        RWDT;
 268   1      }
 269          
 270          // Вектор прер-ния 000BH, банк регистров 1
 271              
 272          static void timer0 (void) interrupt 1 using 1
 273          {
 274   1        TH0 = CLSTH; TL0 = CLSTL;
 275   1        if(COUNT_BOD) COUNT_BOD--;
 276   1      }
 277          
 278          // Вектор прер-ния 0033H, банк регистров 1
 279              
 280          static void end_adc (void) interrupt 6 using 1
 281          {
 282   1        VAR.du_c[0] = ADCDATAH & 0x0f;
 283   1        VAR.du_c[1] = ADCDATAL;
 284   1        fl_ad = 0;
 285   1      }
 286          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    555    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     19       8
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      5    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
