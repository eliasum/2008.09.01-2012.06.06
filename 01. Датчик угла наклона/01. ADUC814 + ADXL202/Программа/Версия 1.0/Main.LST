C51 COMPILER V7.50   MAIN                                                                  07/27/2009 13:39:49 PAGE 1   


C51 COMPILER V7.50, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN Main.OBJ
COMPILER INVOKED BY: D:\Work\Keil51\C51\BIN\C51.EXE Main.c BROWSE DEBUG OBJECTEXTEND CODE LISTINCLUDE SYMBOLS

line level    source

   1          /********************************************************************************/
   2          /*                                                                              */
   3          /*                       ”правл€юща€ программа дл€ 'ADXL202'                    */
   4          /*                          ¬ерси€ 1.0 (7 июн€ 2009 г)                          */
   5          /*                                                                              */
   6          /********************************************************************************/
   7          #include "main.h"
   1      =1  /********************************************************************************/
   2      =1  /*                                                                              */
   3      =1  /*                 ‘айл определений дл€ управл€ющей программы                   */
   4      =1  /*                                                                              */
   5      =1  /********************************************************************************/
   6      =1  
   7      =1  #ifndef _MAIN_H
   8      =1  #define _MAIN_H
   9      =1  
  10      =1  #include "Aduc814.h"
   1      =2  /********************************************************************************/
   2      =2  /*                                                                              */
   3      =2  /*                 ќписание ресурсов микроконтроллера ADuC814xR.                */
   4      =2  /*                                                                              */
   5      =2  /********************************************************************************/
   6      =2  #ifndef _REG_ADuC814
   7      =2  #define _REG_ADuC814
   8      =2  
   9      =2  /*==============================================================================*/
  10      =2  /*                 ќбъ€влени€ регистров специальных функций.                    */
  11      =2  /*==============================================================================*/
  12      =2  sfr   P0        = 0x80;
  13      =2  sfr   SP        = 0x81;
  14      =2  sfr   DPL       = 0x82;
  15      =2  sfr   DPH       = 0x83;
  16      =2  sfr   PCON      = 0x87;
  17      =2  sfr   TCON      = 0x88;
  18      =2  sfr   TMOD      = 0x89;
  19      =2  sfr   TL0       = 0x8A;
  20      =2  sfr   TL1       = 0x8B;
  21      =2  sfr   TH0       = 0x8C;
  22      =2  sfr   TH1       = 0x8D;
  23      =2  sfr   P1        = 0x90;
  24      =2  sfr   SCON      = 0x98;
  25      =2  sfr   SBUF      = 0x99;
  26      =2  sfr   I2CDAT    = 0x9A;
  27      =2  sfr   I2CADD    = 0x9B;
  28      =2  sfr   CFG814    = 0x9C;
  29      =2  sfr   P2        = 0xA0;
  30      =2  sfr   TIMECON   = 0xA1;
  31      =2  sfr   HTHSEC    = 0xA2;
  32      =2  sfr   SEC       = 0xA3;
  33      =2  sfr   MIN       = 0xA4;
  34      =2  sfr   HOUR      = 0xA5;
  35      =2  sfr   INTVAL    = 0xA6;
  36      =2  sfr   IE        = 0xA8;
  37      =2  sfr   IEIP2     = 0xA9;
  38      =2  sfr   P3        = 0xB0;
C51 COMPILER V7.50   MAIN                                                                  07/27/2009 13:39:49 PAGE 2   

  39      =2  sfr   IP        = 0xB8;
  40      =2  sfr   ECON      = 0xB9;
  41      =2  sfr   ETIM1     = 0xBA;    //AR
  42      =2  sfr   ETIM2     = 0xBB;
  43      =2  sfr   EDATA1    = 0xBC;
  44      =2  sfr   EDATA2    = 0xBD;
  45      =2  sfr   EDATA3    = 0xBE;
  46      =2  sfr   EDATA4    = 0xBF;
  47      =2  sfr   WDCON     = 0xC0;
  48      =2  sfr   CHIPID    = 0xC2;
  49      =2  sfr   EADRL     = 0xC6;
  50      =2  sfr   T2CON     = 0xC8;
  51      =2  sfr   RCAP2L    = 0xCA;
  52      =2  sfr   RCAP2H    = 0xCB;
  53      =2  sfr   TL2       = 0xCC;
  54      =2  sfr   TH2       = 0xCD;
  55      =2  sfr   PSW       = 0xD0;
  56      =2  sfr   PLLCON    = 0xD7;
  57      =2  sfr   ADCCON2   = 0xD8;
  58      =2  sfr   ADCDATAL  = 0xD9;
  59      =2  sfr   ADCDATAH  = 0xDA;
  60      =2  sfr   PSMCON    = 0xDF;
  61      =2  sfr   ACC       = 0xE0;
  62      =2  sfr   I2CCON    = 0xE8;    //
  63      =2  sfr   DCON      = 0xE8;    //
  64      =2  sfr   ADCCON1   = 0xEF;
  65      =2  sfr   B         = 0xF0;
  66      =2  sfr   ADCOFSL   = 0xF1;
  67      =2  sfr   ADCOFSH   = 0xF2;
  68      =2  sfr   ADCGAINL  = 0xF3;
  69      =2  sfr   ADCGAINH  = 0xF4;
  70      =2  sfr   ADCCON3   = 0xF5;
  71      =2  sfr   SPIDAT    = 0xF7;
  72      =2  sfr   SPICON    = 0xF8;
  73      =2  sfr   DAC0L     = 0xF9;
  74      =2  sfr   DAC0H     = 0xFA;
  75      =2  sfr   DAC1L     = 0xFB;
  76      =2  sfr   DAC1H     = 0xFC;
  77      =2  sfr   DACCON    = 0xFD;
  78      =2  
  79      =2  /*------------------------------------------------------------------------------*/
  80      =2  /* TCON - регистр управлени€.                                                   */
  81      =2  /*------------------------------------------------------------------------------*/
  82      =2  sbit  TF1       = 0x8F;
  83      =2  sbit  TR1       = 0x8E;
  84      =2  sbit  TF0       = 0x8D;
  85      =2  sbit  TR0       = 0x8C;
  86      =2  sbit  IE1       = 0x8B;
  87      =2  sbit  IT1       = 0x8A;
  88      =2  sbit  IE0       = 0x89;
  89      =2  sbit  IT0       = 0x88;
  90      =2  
  91      =2  /*------------------------------------------------------------------------------*/
  92      =2  /* P1 - биты параллельного порта 1.                                             */
  93      =2  /*------------------------------------------------------------------------------*/
  94      =2  sbit  T2EX      = 0x91;
  95      =2  sbit  T2        = 0x90;
  96      =2  
  97      =2  /*------------------------------------------------------------------------------*/
  98      =2  /* SCON - регистр управлени€ UART.                                              */
  99      =2  /*------------------------------------------------------------------------------*/
 100      =2  sbit  SM0       = 0x9F;
C51 COMPILER V7.50   MAIN                                                                  07/27/2009 13:39:49 PAGE 3   

 101      =2  sbit  SM1       = 0x9E;
 102      =2  sbit  SM2       = 0x9D;
 103      =2  sbit  REN       = 0x9C;
 104      =2  sbit  TB8       = 0x9B;
 105      =2  sbit  RB8       = 0x9A;
 106      =2  sbit  TI        = 0x99;
 107      =2  sbit  RI        = 0x98;
 108      =2  
 109      =2  /*------------------------------------------------------------------------------*/
 110      =2  /* IE - регистр разрешени€ прерываний.                                          */
 111      =2  /*------------------------------------------------------------------------------*/
 112      =2  sbit  EA        = 0xAF;
 113      =2  sbit  EADC      = 0xAE;
 114      =2  sbit  ET2       = 0xAD;
 115      =2  sbit  ES        = 0xAC;
 116      =2  sbit  ET1       = 0xAB;
 117      =2  sbit  EX1       = 0xAA;
 118      =2  sbit  ET0       = 0xA9;
 119      =2  sbit  EX0       = 0xA8;
 120      =2  
 121      =2  /*------------------------------------------------------------------------------*/
 122      =2  /* P3 - биты параллельного порта 3.                                             */
 123      =2  /*------------------------------------------------------------------------------*/
 124      =2  sbit  RD        = 0xB7;
 125      =2  sbit  WR        = 0xB6;
 126      =2  sbit  T1        = 0xB5;
 127      =2  sbit  T0        = 0xB4;
 128      =2  sbit  INT1      = 0xB3;
 129      =2  sbit  INT0      = 0xB2;
 130      =2  sbit  TXD       = 0xB1;
 131      =2  sbit  RXD       = 0xB0;
 132      =2  
 133      =2  /*------------------------------------------------------------------------------*/
 134      =2  /* IP - регистр приоритетов прерываний.                                         */
 135      =2  /*------------------------------------------------------------------------------*/
 136      =2  sbit  PSI       = 0xBF;
 137      =2  sbit  PADC      = 0xBE;
 138      =2  sbit  PT2       = 0xBD;
 139      =2  sbit  PS        = 0xBC;
 140      =2  sbit  PT1       = 0xBB;
 141      =2  sbit  PX1       = 0xBA;
 142      =2  sbit  PT0       = 0xB9;
 143      =2  sbit  PX0       = 0xB8;
 144      =2  
 145      =2  /*------------------------------------------------------------------------------*/
 146      =2  /* WDCON - регистр управлени€ WatchDog таймером.                                */
 147      =2  /*------------------------------------------------------------------------------*/
 148      =2  sbit  PRE3      = 0xC7;
 149      =2  sbit  PRE2      = 0xC6;
 150      =2  sbit  PRE1      = 0xC5;
 151      =2  sbit  PRE0      = 0xC4;
 152      =2  sbit  WDIR      = 0xC3;
 153      =2  sbit  WDS       = 0xC2;
 154      =2  sbit  WDE       = 0xC1;
 155      =2  sbit  WDWR      = 0xC0;
 156      =2  
 157      =2  /*------------------------------------------------------------------------------*/
 158      =2  /* T2CON - дполнительный контрольный регистр.                                   */
 159      =2  /*------------------------------------------------------------------------------*/
 160      =2  sbit  TF2       = 0xCF;
 161      =2  sbit  EXF2      = 0xCE;
 162      =2  sbit  RCLK      = 0xCD;
C51 COMPILER V7.50   MAIN                                                                  07/27/2009 13:39:49 PAGE 4   

 163      =2  sbit  TCLK      = 0xCC;
 164      =2  sbit  EXEN2     = 0xCB;
 165      =2  sbit  TR2       = 0xCA;
 166      =2  sbit  CNT2      = 0xC9;
 167      =2  sbit  CAP2      = 0xC8;
 168      =2  
 169      =2  /*------------------------------------------------------------------------------*/
 170      =2  /* PSW - слово состо€ни€ программы.                                             */
 171      =2  /*------------------------------------------------------------------------------*/
 172      =2  sbit  CY        = 0xD7;
 173      =2  sbit  AC        = 0xD6;
 174      =2  sbit  F0        = 0xD5;
 175      =2  sbit  RS1       = 0xD4;
 176      =2  sbit  RS0       = 0xD3;
 177      =2  sbit  OV        = 0xD2;
 178      =2  sbit  F1        = 0xD1;
 179      =2  sbit  P         = 0xD0;
 180      =2  
 181      =2  /* ADCCON2 */
 182      =2  sbit  ADCI      = 0xDF;
 183      =2  sbit  ADCSPI    = 0xDE;
 184      =2  sbit  CCONV     = 0xDD;
 185      =2  sbit  SCONV     = 0xDC;
 186      =2  sbit  CS3       = 0xDB;
 187      =2  sbit  CS2       = 0xDA;
 188      =2  sbit  CS1       = 0xD9;
 189      =2  sbit  CS0       = 0xD8;
 190      =2  
 191      =2  /*  I2CCON  */
 192      =2  sbit  MDO       = I2CCON^7;
 193      =2  sbit  MDE       = I2CCON^6;
 194      =2  sbit  MCO       = I2CCON^5;
 195      =2  sbit  MDI       = I2CCON^4;
 196      =2  sbit  I2CM      = I2CCON^3;
 197      =2  sbit  I2CRS     = I2CCON^2;
 198      =2  sbit  I2CTX     = I2CCON^1;
 199      =2  sbit  I2CI      = I2CCON^0;
 200      =2  
 201      =2  /*  DCON  */
 202      =2  sbit  D1        = DCON^7;
 203      =2  sbit  D1EN      = DCON^6;
 204      =2  sbit  D0        = DCON^5;
 205      =2  sbit  D0EN      = DCON^3;
 206      =2  
 207      =2  /* SPICON */
 208      =2  sbit  ISPI      = 0xFF;
 209      =2  sbit  WCOL      = 0xFE;
 210      =2  sbit  SPE       = 0xFD;
 211      =2  sbit  SPIM      = 0xFC;
 212      =2  sbit  CPOL      = 0xFB;
 213      =2  sbit  CPHA      = 0xFA;
 214      =2  sbit  SPR1      = 0xF9;
 215      =2  sbit  SPR0      = 0xF8;
 216      =2  
 217      =2  /*------------------------------------------------------------------------------*/
 218      =2  /* P0..3 - биты параллельного порта 0...3                                       */
 219      =2  /*------------------------------------------------------------------------------*/
 220      =2  
 221      =2  sbit P17        = 0x97;
 222      =2  sbit P16        = 0x96;
 223      =2  sbit P15        = 0x95;
 224      =2  sbit P14        = 0x94;
C51 COMPILER V7.50   MAIN                                                                  07/27/2009 13:39:49 PAGE 5   

 225      =2  sbit P13        = 0x93;
 226      =2  sbit P12        = 0x92;
 227      =2  sbit P11        = 0x91;
 228      =2  sbit P10        = 0x90;
 229      =2  
 230      =2  sbit P37        = 0xB7;
 231      =2  sbit P36        = 0xB6;
 232      =2  sbit P35        = 0xB5;
 233      =2  sbit P34        = 0xB4;
 234      =2  sbit P33        = 0xB3;
 235      =2  sbit P32        = 0xB2;
 236      =2  sbit P31        = 0xB1;
 237      =2  sbit P30        = 0xB0;
 238      =2  
 239      =2  #define IDL     0x01            /* Ѕит переключени€ в режим холостого хода.     */
 240      =2  
 241      =2  /*------------------------------------------------------------------------------*/
 242      =2  /* ћакрокоманда перевода процессора в режим пониженного потреблени€.            */
 243      =2  /* ѕринимает:           Ќичего не принимает.                                    */
 244      =2  /* ¬озвращает:          Ќичего не возвращает.                                   */
 245      =2  /*------------------------------------------------------------------------------*/
 246      =2  #define IDLE()  PCON|=IDL
 247      =2  
 248      =2  #endif
 249      =2  
  11      =1  #include "MeasXY_LIB\MeasXY.h"
   1      =2  /* јссемблерные функции */
   2      =2  char idata* meas_xy(void);
  12      =1  
  13      =1  // прототипы 'c'-функций в файле 'Main.c'
  14      =1  void Tx_means(char* outmeans);
  15      =1  void Tx_byte(char outbyte);
  16      =1  
  17      =1  #endif
  18      =1  
   8          /*==============================================================================*/
   9          /*                      √лобальные переменные программы.                        */
  10          /*==============================================================================*/
  11          #define NSUM 2                            // длина очереди усреднени€
  12          /*==============================================================================*/
  13          /*                                                                              */
  14          /*                         √лавна€ функци€ программы.                           */
  15          /*                                                                              */
  16          /*==============================================================================*/
  17          void main(void)
  18          {
  19   1        idata struct MEASURE {                   // описание структуры 1-го замера
  20   1          unsigned int T1X;
  21   1          unsigned int T2X;
  22   1          unsigned int T1Y;
  23   1          unsigned int T2Y;  };
  24   1      
  25   1        idata char*  get_one;                    // указатель на замер
  26   1        idata struct MEASURE Buff[NSUM];         // очередь замеров
  27   1        idata struct MEASURE one;                // 1-н замер
  28   1      
  29   1        unsigned long s;                         // 0..0x0ffffffff
  30   1        unsigned char i;                         // 0..0x0ff
  31   1      
  32   1        IE = 0;                                  // все прерывани€ запрещены
  33   1      
  34   1      // настройка синтезатора
C51 COMPILER V7.50   MAIN                                                                  07/27/2009 13:39:49 PAGE 6   

  35   1        PLLCON = 0x001;                          // синтезатор рабочей частоты €дра
  36   1                                                 // Core Clk = XTALL*256 = 32768*256 = 8388608 герц
  37   1      // настройка сторожевого таймера
  38   1        WDWR = 1;                                // разрешение записи в 'WDCON'
  39   1        WDCON = 0x072;                           // запуск WDT с временным интервалом 2с
  40   1      
  41   1      // настройка UART:
  42   1        SCON = 0x040;                            // настройка последовательного порта на 
  43   1                                                 // асинхронный 8-битовый режим
  44   1      // настройка “/—0:
  45   1        TMOD = 0x001;                            // T/C0 - таймер
  46   1      
  47   1      // настройка “/—2:
  48   1        RCAP2H = 0x0FF;                          // задание скорости 9600 бод 
  49   1        RCAP2L = 0x0E5;                          // (814code_asm)
  50   1        TH2    = 0x0FF;       
  51   1        TL2    = 0x0E5; 
  52   1        T2CON  = 0x030;                          // установка “/—2 в качестве генератора скорости UART
  53   1        TR2    = 1;                              // запуск генератора скорости 'UART'
  54   1      
  55   1        for(;;)
  56   1        {
  57   2          get_one = meas_xy();                   // получаем один замер
  58   2                                                 // извлекаем его
  59   2          i = *(get_one++); one.T1X = i;
  60   2          i = *(get_one++); one.T1X += 256*i;
  61   2          i = *(get_one++); one.T2X = i;
  62   2          i = *(get_one++); one.T2X += 256*i;
  63   2          i = *(get_one++); one.T1Y = i;
  64   2          i = *(get_one++); one.T1Y += 256*i;
  65   2          i = *(get_one++); one.T2Y = i;
  66   2          i = *(get_one++); one.T2Y += 256*i;
  67   2                                                 // сдвигаем очередь и задвигаем новый замер
  68   2          for(i=NSUM-1; i>0; i--) Buff[i]=Buff[i-1]; Buff[0]=one;
  69   2                                                 // считаем среднее из очереди
  70   2          s=0; for(i=0; i<NSUM; i++) s += Buff[i].T1X;
  71   2          s=s>>(NSUM/2); one.T1X = (unsigned int)(0x0ffff & s); // T1.X'
  72   2          s=0; for(i=0; i<NSUM; i++) s += Buff[i].T2X;
  73   2          s=s>>(NSUM/2); one.T2X = (unsigned int)(0x0ffff & s); // T2.X'
  74   2          s=0; for(i=0; i<NSUM; i++) s += Buff[i].T1Y;
  75   2          s=s>>(NSUM/2); one.T1Y = (unsigned int)(0x0ffff & s); // T1.Y'
  76   2          s=0; for(i=0; i<NSUM; i++) s += Buff[i].T2Y;
  77   2          s=s>>(NSUM/2); one.T2Y = (unsigned int)(0x0ffff & s); // T2.Y'
  78   2      
  79   2          get_one = &one;                        // указываем на усредненный результат
*** WARNING C182 IN LINE 79 OF MAIN.C: pointer to different objects
  80   2      
  81   2          Tx_means(get_one);                     // выводим его в 'UART'
  82   2      
  83   2      // сброс сторожевого таймера
  84   2          EA   = 0;
  85   2          WDWR = 1;
  86   2          WDE  = 1;
  87   2          EA   = 1;
  88   2        }
  89   1      }
  90          
  91          void Tx_means(char* outmeans)              // разворачиваем из
  92          {                                          // пам€ти побайтно
  93   1        unsigned char d, cc, i;                  // и выводим в 'UART'
  94   1      
  95   1        d = 0; cc = 0x05a;
C51 COMPILER V7.50   MAIN                                                                  07/27/2009 13:39:49 PAGE 7   

  96   1        Tx_byte(cc);
  97   1        for(i=0; i<8; i+=2)
  98   1        {
  99   2          d = *(outmeans+i+1);
 100   2          cc += d; Tx_byte(d);
 101   2          d = *(outmeans+i);
 102   2          cc += d; Tx_byte(d);
 103   2        }
 104   1        Tx_byte(cc);
 105   1      }
 106          
 107          void Tx_byte(char outbyte)                 // вывод байта в 'UART'
 108          {
 109   1        SBUF = outbyte;
 110   1        while (!TI);
 111   1        TI = 0;
 112   1      }
 113          
 114          // ћинин :)                                // Ёто ‘сЄ !!! 3:07 2009.06.07
C51 COMPILER V7.50   MAIN                                                                  07/27/2009 13:39:49 PAGE 8   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION main (BEGIN)
                                           ; SOURCE LINE # 17
                                           ; SOURCE LINE # 18
                                           ; SOURCE LINE # 32
0000 E4                CLR     A
0001 F5A8              MOV     IE,A
                                           ; SOURCE LINE # 35
0003 75D701            MOV     PLLCON,#01H
                                           ; SOURCE LINE # 38
0006 D2C0              SETB    WDWR
                                           ; SOURCE LINE # 39
0008 75C072            MOV     WDCON,#072H
                                           ; SOURCE LINE # 42
000B 759840            MOV     SCON,#040H
                                           ; SOURCE LINE # 45
000E 758901            MOV     TMOD,#01H
                                           ; SOURCE LINE # 48
0011 75CBFF            MOV     RCAP2H,#0FFH
                                           ; SOURCE LINE # 49
0014 75CAE5            MOV     RCAP2L,#0E5H
                                           ; SOURCE LINE # 50
0017 75CDFF            MOV     TH2,#0FFH
                                           ; SOURCE LINE # 51
001A 75CCE5            MOV     TL2,#0E5H
                                           ; SOURCE LINE # 52
001D 75C830            MOV     T2CON,#030H
                                           ; SOURCE LINE # 53
0020 D2CA              SETB    TR2
                                           ; SOURCE LINE # 55
0022         ?C0001:
                                           ; SOURCE LINE # 56
                                           ; SOURCE LINE # 57
0022 120000      E     LCALL   meas_xy
0025 A907              MOV     R1,AR7
0027 7800        R     MOV     R0,#LOW get_one
0029 7600              MOV     @R0,#00H
002B 08                INC     R0
002C 7600              MOV     @R0,#00H
002E 08                INC     R0
002F A601              MOV     @R0,AR1
                                           ; SOURCE LINE # 59
0031 7800        R     MOV     R0,#LOW get_one
0033 8603              MOV     AR3,@R0
0035 08                INC     R0
0036 08                INC     R0
0037 06                INC     @R0
0038 E6                MOV     A,@R0
0039 18                DEC     R0
003A 8602              MOV     AR2,@R0
003C 7001              JNZ     ?C0026
003E 06                INC     @R0
003F         ?C0026:
003F 14                DEC     A
0040 F9                MOV     R1,A
0041 120000      E     LCALL   ?C?CLDPTR
0044 F500        R     MOV     i,A
0046 FF                MOV     R7,A
0047 7800        R     MOV     R0,#LOW one
0049 7600              MOV     @R0,#00H
C51 COMPILER V7.50   MAIN                                                                  07/27/2009 13:39:49 PAGE 9   

004B 08                INC     R0
004C A607              MOV     @R0,AR7
                                           ; SOURCE LINE # 60
004E 7800        R     MOV     R0,#LOW get_one
0050 8603              MOV     AR3,@R0
0052 08                INC     R0
0053 08                INC     R0
0054 06                INC     @R0
0055 E6                MOV     A,@R0
0056 18                DEC     R0
0057 8602              MOV     AR2,@R0
0059 7001              JNZ     ?C0027
005B 06                INC     @R0
005C         ?C0027:
005C 14                DEC     A
005D F9                MOV     R1,A
005E 120000      E     LCALL   ?C?CLDPTR
0061 F500        R     MOV     i,A
0063 FE                MOV     R6,A
0064 7800        R     MOV     R0,#LOW one+01H
0066 E4                CLR     A
0067 26                ADD     A,@R0
0068 F6                MOV     @R0,A
0069 18                DEC     R0
006A EE                MOV     A,R6
006B 36                ADDC    A,@R0
006C F6                MOV     @R0,A
                                           ; SOURCE LINE # 61
006D 7800        R     MOV     R0,#LOW get_one
006F 8603              MOV     AR3,@R0
0071 08                INC     R0
0072 08                INC     R0
0073 06                INC     @R0
0074 E6                MOV     A,@R0
0075 18                DEC     R0
0076 8602              MOV     AR2,@R0
0078 7001              JNZ     ?C0028
007A 06                INC     @R0
007B         ?C0028:
007B 14                DEC     A
007C F9                MOV     R1,A
007D 120000      E     LCALL   ?C?CLDPTR
0080 F500        R     MOV     i,A
0082 FF                MOV     R7,A
0083 7800        R     MOV     R0,#LOW one+02H
0085 7600              MOV     @R0,#00H
0087 08                INC     R0
0088 A607              MOV     @R0,AR7
                                           ; SOURCE LINE # 62
008A 7800        R     MOV     R0,#LOW get_one
008C 8603              MOV     AR3,@R0
008E 08                INC     R0
008F 08                INC     R0
0090 06                INC     @R0
0091 E6                MOV     A,@R0
0092 18                DEC     R0
0093 8602              MOV     AR2,@R0
0095 7001              JNZ     ?C0029
0097 06                INC     @R0
0098         ?C0029:
0098 14                DEC     A
0099 F9                MOV     R1,A
C51 COMPILER V7.50   MAIN                                                                  07/27/2009 13:39:49 PAGE 10  

009A 120000      E     LCALL   ?C?CLDPTR
009D F500        R     MOV     i,A
009F FE                MOV     R6,A
00A0 7800        R     MOV     R0,#LOW one+03H
00A2 E4                CLR     A
00A3 26                ADD     A,@R0
00A4 F6                MOV     @R0,A
00A5 18                DEC     R0
00A6 EE                MOV     A,R6
00A7 36                ADDC    A,@R0
00A8 F6                MOV     @R0,A
                                           ; SOURCE LINE # 63
00A9 7800        R     MOV     R0,#LOW get_one
00AB 8603              MOV     AR3,@R0
00AD 08                INC     R0
00AE 08                INC     R0
00AF 06                INC     @R0
00B0 E6                MOV     A,@R0
00B1 18                DEC     R0
00B2 8602              MOV     AR2,@R0
00B4 7001              JNZ     ?C0030
00B6 06                INC     @R0
00B7         ?C0030:
00B7 14                DEC     A
00B8 F9                MOV     R1,A
00B9 120000      E     LCALL   ?C?CLDPTR
00BC F500        R     MOV     i,A
00BE FF                MOV     R7,A
00BF 7800        R     MOV     R0,#LOW one+04H
00C1 7600              MOV     @R0,#00H
00C3 08                INC     R0
00C4 A607              MOV     @R0,AR7
                                           ; SOURCE LINE # 64
00C6 7800        R     MOV     R0,#LOW get_one
00C8 8603              MOV     AR3,@R0
00CA 08                INC     R0
00CB 08                INC     R0
00CC 06                INC     @R0
00CD E6                MOV     A,@R0
00CE 18                DEC     R0
00CF 8602              MOV     AR2,@R0
00D1 7001              JNZ     ?C0031
00D3 06                INC     @R0
00D4         ?C0031:
00D4 14                DEC     A
00D5 F9                MOV     R1,A
00D6 120000      E     LCALL   ?C?CLDPTR
00D9 F500        R     MOV     i,A
00DB FE                MOV     R6,A
00DC 7800        R     MOV     R0,#LOW one+05H
00DE E4                CLR     A
00DF 26                ADD     A,@R0
00E0 F6                MOV     @R0,A
00E1 18                DEC     R0
00E2 EE                MOV     A,R6
00E3 36                ADDC    A,@R0
00E4 F6                MOV     @R0,A
                                           ; SOURCE LINE # 65
00E5 7800        R     MOV     R0,#LOW get_one
00E7 8603              MOV     AR3,@R0
00E9 08                INC     R0
00EA 08                INC     R0
C51 COMPILER V7.50   MAIN                                                                  07/27/2009 13:39:49 PAGE 11  

00EB 06                INC     @R0
00EC E6                MOV     A,@R0
00ED 18                DEC     R0
00EE 8602              MOV     AR2,@R0
00F0 7001              JNZ     ?C0032
00F2 06                INC     @R0
00F3         ?C0032:
00F3 14                DEC     A
00F4 F9                MOV     R1,A
00F5 120000      E     LCALL   ?C?CLDPTR
00F8 F500        R     MOV     i,A
00FA FF                MOV     R7,A
00FB 7800        R     MOV     R0,#LOW one+06H
00FD 7600              MOV     @R0,#00H
00FF 08                INC     R0
0100 A607              MOV     @R0,AR7
                                           ; SOURCE LINE # 66
0102 7800        R     MOV     R0,#LOW get_one
0104 8603              MOV     AR3,@R0
0106 08                INC     R0
0107 08                INC     R0
0108 06                INC     @R0
0109 E6                MOV     A,@R0
010A 18                DEC     R0
010B 8602              MOV     AR2,@R0
010D 7001              JNZ     ?C0033
010F 06                INC     @R0
0110         ?C0033:
0110 14                DEC     A
0111 F9                MOV     R1,A
0112 120000      E     LCALL   ?C?CLDPTR
0115 F500        R     MOV     i,A
0117 FE                MOV     R6,A
0118 7800        R     MOV     R0,#LOW one+07H
011A E4                CLR     A
011B 26                ADD     A,@R0
011C F6                MOV     @R0,A
011D 18                DEC     R0
011E EE                MOV     A,R6
011F 36                ADDC    A,@R0
0120 F6                MOV     @R0,A
                                           ; SOURCE LINE # 68
0121 750001      R     MOV     i,#01H
0124         ?C0003:
0124 E500        R     MOV     A,i
0126 75F008            MOV     B,#08H
0129 A4                MUL     AB
012A FF                MOV     R7,A
012B 2400        R     ADD     A,#LOW Buff+0FFF8H
012D F9                MOV     R1,A
012E E4                CLR     A
012F FA                MOV     R2,A
0130 FB                MOV     R3,A
0131 C001              PUSH    AR1
0133 7400        R     MOV     A,#LOW Buff
0135 2F                ADD     A,R7
0136 F9                MOV     R1,A
0137 E4                CLR     A
0138 A801              MOV     R0,AR1
013A FC                MOV     R4,A
013B FD                MOV     R5,A
013C D001              POP     AR1
C51 COMPILER V7.50   MAIN                                                                  07/27/2009 13:39:49 PAGE 12  

013E FE                MOV     R6,A
013F 7F08              MOV     R7,#08H
0141 120000      E     LCALL   ?C?COPY
0144 D500DD      R     DJNZ    i,?C0003
0147         ?C0004:
0147 7800        R     MOV     R0,#LOW Buff
0149 7C00        R     MOV     R4,#HIGH Buff
014B 7D00              MOV     R5,#00H
014D 7B00              MOV     R3,#00H
014F 7A00        R     MOV     R2,#HIGH one
0151 7900        R     MOV     R1,#LOW one
0153 7E00              MOV     R6,#00H
0155 7F08              MOV     R7,#08H
0157 120000      E     LCALL   ?C?COPY
                                           ; SOURCE LINE # 70
015A E4                CLR     A
015B F500        R     MOV     s+03H,A
015D F500        R     MOV     s+02H,A
015F F500        R     MOV     s+01H,A
0161 F500        R     MOV     s,A
0163 F500        R     MOV     i,A
0165         ?C0006:
0165 E500        R     MOV     A,i
0167 75F008            MOV     B,#08H
016A A4                MUL     AB
016B 2400        R     ADD     A,#LOW Buff
016D F8                MOV     R0,A
016E E6                MOV     A,@R0
016F FE                MOV     R6,A
0170 08                INC     R0
0171 E6                MOV     A,@R0
0172 FF                MOV     R7,A
0173 E4                CLR     A
0174 FC                MOV     R4,A
0175 FD                MOV     R5,A
0176 E500        R     MOV     A,s+03H
0178 2F                ADD     A,R7
0179 F500        R     MOV     s+03H,A
017B E500        R     MOV     A,s+02H
017D 3E                ADDC    A,R6
017E F500        R     MOV     s+02H,A
0180 ED                MOV     A,R5
0181 3500        R     ADDC    A,s+01H
0183 F500        R     MOV     s+01H,A
0185 EC                MOV     A,R4
0186 3500        R     ADDC    A,s
0188 F500        R     MOV     s,A
018A 0500        R     INC     i
018C E500        R     MOV     A,i
018E B402D4            CJNE    A,#02H,?C0006
0191         ?C0007:
                                           ; SOURCE LINE # 71
0191 AF00        R     MOV     R7,s+03H
0193 AE00        R     MOV     R6,s+02H
0195 AD00        R     MOV     R5,s+01H
0197 AC00        R     MOV     R4,s
0199 7801              MOV     R0,#01H
019B 120000      E     LCALL   ?C?ULSHR
019E 8F00        R     MOV     s+03H,R7
01A0 8E00        R     MOV     s+02H,R6
01A2 8D00        R     MOV     s+01H,R5
01A4 8C00        R     MOV     s,R4
C51 COMPILER V7.50   MAIN                                                                  07/27/2009 13:39:49 PAGE 13  

01A6 E4                CLR     A
01A7 7800        R     MOV     R0,#LOW one
01A9 A606              MOV     @R0,AR6
01AB 08                INC     R0
01AC A607              MOV     @R0,AR7
                                           ; SOURCE LINE # 72
01AE F500        R     MOV     s+03H,A
01B0 F500        R     MOV     s+02H,A
01B2 F500        R     MOV     s+01H,A
01B4 F500        R     MOV     s,A
01B6 F500        R     MOV     i,A
01B8         ?C0009:
01B8 E500        R     MOV     A,i
01BA 75F008            MOV     B,#08H
01BD A4                MUL     AB
01BE 2400        R     ADD     A,#LOW Buff+02H
01C0 F8                MOV     R0,A
01C1 E6                MOV     A,@R0
01C2 FE                MOV     R6,A
01C3 08                INC     R0
01C4 E6                MOV     A,@R0
01C5 FF                MOV     R7,A
01C6 E4                CLR     A
01C7 FC                MOV     R4,A
01C8 FD                MOV     R5,A
01C9 E500        R     MOV     A,s+03H
01CB 2F                ADD     A,R7
01CC F500        R     MOV     s+03H,A
01CE E500        R     MOV     A,s+02H
01D0 3E                ADDC    A,R6
01D1 F500        R     MOV     s+02H,A
01D3 ED                MOV     A,R5
01D4 3500        R     ADDC    A,s+01H
01D6 F500        R     MOV     s+01H,A
01D8 EC                MOV     A,R4
01D9 3500        R     ADDC    A,s
01DB F500        R     MOV     s,A
01DD 0500        R     INC     i
01DF E500        R     MOV     A,i
01E1 B402D4            CJNE    A,#02H,?C0009
01E4         ?C0010:
                                           ; SOURCE LINE # 73
01E4 AF00        R     MOV     R7,s+03H
01E6 AE00        R     MOV     R6,s+02H
01E8 AD00        R     MOV     R5,s+01H
01EA AC00        R     MOV     R4,s
01EC 7801              MOV     R0,#01H
01EE 120000      E     LCALL   ?C?ULSHR
01F1 8F00        R     MOV     s+03H,R7
01F3 8E00        R     MOV     s+02H,R6
01F5 8D00        R     MOV     s+01H,R5
01F7 8C00        R     MOV     s,R4
01F9 E4                CLR     A
01FA 7800        R     MOV     R0,#LOW one+02H
01FC A606              MOV     @R0,AR6
01FE 08                INC     R0
01FF A607              MOV     @R0,AR7
                                           ; SOURCE LINE # 74
0201 F500        R     MOV     s+03H,A
0203 F500        R     MOV     s+02H,A
0205 F500        R     MOV     s+01H,A
0207 F500        R     MOV     s,A
C51 COMPILER V7.50   MAIN                                                                  07/27/2009 13:39:49 PAGE 14  

0209 F500        R     MOV     i,A
020B         ?C0012:
020B E500        R     MOV     A,i
020D 75F008            MOV     B,#08H
0210 A4                MUL     AB
0211 2400        R     ADD     A,#LOW Buff+04H
0213 F8                MOV     R0,A
0214 E6                MOV     A,@R0
0215 FE                MOV     R6,A
0216 08                INC     R0
0217 E6                MOV     A,@R0
0218 FF                MOV     R7,A
0219 E4                CLR     A
021A FC                MOV     R4,A
021B FD                MOV     R5,A
021C E500        R     MOV     A,s+03H
021E 2F                ADD     A,R7
021F F500        R     MOV     s+03H,A
0221 E500        R     MOV     A,s+02H
0223 3E                ADDC    A,R6
0224 F500        R     MOV     s+02H,A
0226 ED                MOV     A,R5
0227 3500        R     ADDC    A,s+01H
0229 F500        R     MOV     s+01H,A
022B EC                MOV     A,R4
022C 3500        R     ADDC    A,s
022E F500        R     MOV     s,A
0230 0500        R     INC     i
0232 E500        R     MOV     A,i
0234 B402D4            CJNE    A,#02H,?C0012
0237         ?C0013:
                                           ; SOURCE LINE # 75
0237 AF00        R     MOV     R7,s+03H
0239 AE00        R     MOV     R6,s+02H
023B AD00        R     MOV     R5,s+01H
023D AC00        R     MOV     R4,s
023F 7801              MOV     R0,#01H
0241 120000      E     LCALL   ?C?ULSHR
0244 8F00        R     MOV     s+03H,R7
0246 8E00        R     MOV     s+02H,R6
0248 8D00        R     MOV     s+01H,R5
024A 8C00        R     MOV     s,R4
024C E4                CLR     A
024D 7800        R     MOV     R0,#LOW one+04H
024F A606              MOV     @R0,AR6
0251 08                INC     R0
0252 A607              MOV     @R0,AR7
                                           ; SOURCE LINE # 76
0254 F500        R     MOV     s+03H,A
0256 F500        R     MOV     s+02H,A
0258 F500        R     MOV     s+01H,A
025A F500        R     MOV     s,A
025C F500        R     MOV     i,A
025E         ?C0015:
025E E500        R     MOV     A,i
0260 75F008            MOV     B,#08H
0263 A4                MUL     AB
0264 2400        R     ADD     A,#LOW Buff+06H
0266 F8                MOV     R0,A
0267 E6                MOV     A,@R0
0268 FE                MOV     R6,A
0269 08                INC     R0
C51 COMPILER V7.50   MAIN                                                                  07/27/2009 13:39:49 PAGE 15  

026A E6                MOV     A,@R0
026B FF                MOV     R7,A
026C E4                CLR     A
026D FC                MOV     R4,A
026E FD                MOV     R5,A
026F E500        R     MOV     A,s+03H
0271 2F                ADD     A,R7
0272 F500        R     MOV     s+03H,A
0274 E500        R     MOV     A,s+02H
0276 3E                ADDC    A,R6
0277 F500        R     MOV     s+02H,A
0279 ED                MOV     A,R5
027A 3500        R     ADDC    A,s+01H
027C F500        R     MOV     s+01H,A
027E EC                MOV     A,R4
027F 3500        R     ADDC    A,s
0281 F500        R     MOV     s,A
0283 0500        R     INC     i
0285 E500        R     MOV     A,i
0287 B402D4            CJNE    A,#02H,?C0015
028A         ?C0016:
                                           ; SOURCE LINE # 77
028A AF00        R     MOV     R7,s+03H
028C AE00        R     MOV     R6,s+02H
028E AD00        R     MOV     R5,s+01H
0290 AC00        R     MOV     R4,s
0292 7801              MOV     R0,#01H
0294 120000      E     LCALL   ?C?ULSHR
0297 8F00        R     MOV     s+03H,R7
0299 8E00        R     MOV     s+02H,R6
029B 8D00        R     MOV     s+01H,R5
029D 8C00        R     MOV     s,R4
029F E4                CLR     A
02A0 7800        R     MOV     R0,#LOW one+06H
02A2 A606              MOV     @R0,AR6
02A4 08                INC     R0
02A5 A607              MOV     @R0,AR7
                                           ; SOURCE LINE # 79
02A7 FB                MOV     R3,A
02A8 7A00        R     MOV     R2,#HIGH one
02AA 7900        R     MOV     R1,#LOW one
02AC 7800        R     MOV     R0,#LOW get_one
02AE F6                MOV     @R0,A
02AF 08                INC     R0
02B0 A602              MOV     @R0,AR2
02B2 08                INC     R0
02B3 A601              MOV     @R0,AR1
                                           ; SOURCE LINE # 81
02B5 120000      R     LCALL   _Tx_means
                                           ; SOURCE LINE # 84
02B8 C2AF              CLR     EA
                                           ; SOURCE LINE # 85
02BA D2C0              SETB    WDWR
                                           ; SOURCE LINE # 86
02BC D2C1              SETB    WDE
                                           ; SOURCE LINE # 87
02BE D2AF              SETB    EA
                                           ; SOURCE LINE # 88
02C0 020000      R     LJMP    ?C0001
             ; FUNCTION main (END)

             ; FUNCTION _Tx_means (BEGIN)
C51 COMPILER V7.50   MAIN                                                                  07/27/2009 13:39:49 PAGE 16  

                                           ; SOURCE LINE # 91
0000 8B00        R     MOV     outmeans,R3
0002 8A00        R     MOV     outmeans+01H,R2
0004 8900        R     MOV     outmeans+02H,R1
                                           ; SOURCE LINE # 92
                                           ; SOURCE LINE # 95
0006 E4                CLR     A
0007 F500        R     MOV     d,A
0009 75005A      R     MOV     cc,#05AH
                                           ; SOURCE LINE # 96
000C AF00        R     MOV     R7,cc
000E 120000      R     LCALL   _Tx_byte
                                           ; SOURCE LINE # 97
0011 E4                CLR     A
0012 F500        R     MOV     i,A
0014         ?C0019:
0014 E500        R     MOV     A,i
0016 C3                CLR     C
0017 9408              SUBB    A,#08H
0019 5028              JNC     ?C0020
                                           ; SOURCE LINE # 98
                                           ; SOURCE LINE # 99
001B AB00        R     MOV     R3,outmeans
001D 7E00              MOV     R6,#00H
001F E500        R     MOV     A,outmeans+02H
0021 2500        R     ADD     A,i
0023 F9                MOV     R1,A
0024 EE                MOV     A,R6
0025 3500        R     ADDC    A,outmeans+01H
0027 FA                MOV     R2,A
0028 900001            MOV     DPTR,#01H
                                           ; SOURCE LINE # 100
002B 120000      R     LCALL   L?0034
                                           ; SOURCE LINE # 101
002E AB00        R     MOV     R3,outmeans
0030 AA00        R     MOV     R2,outmeans+01H
0032 A900        R     MOV     R1,outmeans+02H
0034 850082      R     MOV     DPL,i
0037 758300            MOV     DPH,#00H
                                           ; SOURCE LINE # 102
003A 120000      R     LCALL   L?0034
                                           ; SOURCE LINE # 103
003D 0500        R     INC     i
003F 0500        R     INC     i
0041 80D1              SJMP    ?C0019
0043         ?C0020:
                                           ; SOURCE LINE # 104
0043 AF00        R     MOV     R7,cc
0045 020000      R     LJMP    _Tx_byte
             ; FUNCTION _Tx_means (END)

             ; FUNCTION L?0034 (BEGIN)
0000 120000      E     LCALL   ?C?CLDOPTR
0003 F500        R     MOV     d,A
0005 2500        R     ADD     A,cc
0007 F500        R     MOV     cc,A
0009 AF00        R     MOV     R7,d
             ; FUNCTION _Tx_byte (BEGIN)
                                           ; SOURCE LINE # 107
;---- Variable 'outbyte' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 108
                                           ; SOURCE LINE # 109
C51 COMPILER V7.50   MAIN                                                                  07/27/2009 13:39:49 PAGE 17  

000B 8F99              MOV     SBUF,R7
000D         ?C0023:
                                           ; SOURCE LINE # 110
000D 3099FD            JNB     TI,?C0023
0010         ?C0024:
                                           ; SOURCE LINE # 111
0010 C299              CLR     TI
                                           ; SOURCE LINE # 112
0012 22                RET     
             ; FUNCTION _Tx_byte (END)

C51 COMPILER V7.50   MAIN                                                                  07/27/2009 13:39:49 PAGE 18  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


EA . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AFH  1
IE . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A8H  1
TI . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0099H  1
I2CCON . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E8H  1
RCAP2H . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CBH  1
_Tx_means. . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  outmeans . . . . . . . . . . . . . .  AUTO     DATA   PTR      0000H  3
  d. . . . . . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0003H  1
  cc . . . . . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0004H  1
  i. . . . . . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0005H  1
DCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E8H  1
RCAP2L . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CAH  1
main . . . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  MEASURE. . . . . . . . . . . . . . .  * TAG *  -----  STRUCT   -----  8
  get_one. . . . . . . . . . . . . . .  AUTO     IDATA  PTR      0000H  3
  Buff . . . . . . . . . . . . . . . .  AUTO     IDATA  ARRAY    0003H  16
  one. . . . . . . . . . . . . . . . .  AUTO     IDATA  STRUCT   0013H  8
  s. . . . . . . . . . . . . . . . . .  AUTO     DATA   U_LONG   0000H  4
  i. . . . . . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0004H  1
SBUF . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0099H  1
SCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0098H  1
TMOD . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0089H  1
_Tx_byte . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     000BH  -----
  outbyte. . . . . . . . . . . . . . .  * REG *  DATA   CHAR     0007H  1
WDWR . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C0H  1
PLLCON . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D7H  1
TH2. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CDH  1
TL2. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CCH  1
TR2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CAH  1
WDE. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C1H  1
T2CON. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C8H  1
meas_xy. . . . . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
WDCON. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C0H  1


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    798    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      11
   IDATA SIZE       =   ----      27
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
