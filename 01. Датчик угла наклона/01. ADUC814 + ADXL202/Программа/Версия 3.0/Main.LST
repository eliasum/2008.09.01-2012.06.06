C51 COMPILER V7.50   MAIN                                                                  09/24/2009 11:36:55 PAGE 1   


C51 COMPILER V7.50, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN Main.OBJ
COMPILER INVOKED BY: D:\Work\Keil51\C51\BIN\C51.EXE Main.c BROWSE DEBUG OBJECTEXTEND CODE LISTINCLUDE SYMBOLS

line level    source

   1          /********************************************************************************/
   2          /*                                                                              */
   3          /*                       ”правл€юща€ программа дл€ 'ADXL202'                    */
   4          /*                          ¬ерси€ 3.0 (27 июл€ 2009 г)                         */
   5          /*                                                                              */
   6          /********************************************************************************/
   7          #include "main.h"
   1      =1  /********************************************************************************/
   2      =1  /*                                                                              */
   3      =1  /*                 ‘айл определений дл€ управл€ющей программы                   */
   4      =1  /*                                                                              */
   5      =1  /********************************************************************************/
   6      =1  
   7      =1  #ifndef _MAIN_H
   8      =1  #define _MAIN_H
   9      =1  
  10      =1  #include "Aduc814.h"
   1      =2  /********************************************************************************/
   2      =2  /*                                                                              */
   3      =2  /*                 ќписание ресурсов микроконтроллера ADuC814xR.                */
   4      =2  /*                                                                              */
   5      =2  /********************************************************************************/
   6      =2  #ifndef _REG_ADuC814
   7      =2  #define _REG_ADuC814
   8      =2  
   9      =2  /*==============================================================================*/
  10      =2  /*                 ќбъ€влени€ регистров специальных функций.                    */
  11      =2  /*==============================================================================*/
  12      =2  sfr   P0        = 0x80;
  13      =2  sfr   SP        = 0x81;
  14      =2  sfr   DPL       = 0x82;
  15      =2  sfr   DPH       = 0x83;
  16      =2  sfr   PCON      = 0x87;
  17      =2  sfr   TCON      = 0x88;
  18      =2  sfr   TMOD      = 0x89;
  19      =2  sfr   TL0       = 0x8A;
  20      =2  sfr   TL1       = 0x8B;
  21      =2  sfr   TH0       = 0x8C;
  22      =2  sfr   TH1       = 0x8D;
  23      =2  sfr   P1        = 0x90;
  24      =2  sfr   SCON      = 0x98;
  25      =2  sfr   SBUF      = 0x99;
  26      =2  sfr   I2CDAT    = 0x9A;
  27      =2  sfr   I2CADD    = 0x9B;
  28      =2  sfr   CFG814    = 0x9C;
  29      =2  sfr   P2        = 0xA0;
  30      =2  sfr   TIMECON   = 0xA1;
  31      =2  sfr   HTHSEC    = 0xA2;
  32      =2  sfr   SEC       = 0xA3;
  33      =2  sfr   MIN       = 0xA4;
  34      =2  sfr   HOUR      = 0xA5;
  35      =2  sfr   INTVAL    = 0xA6;
  36      =2  sfr   IE        = 0xA8;
  37      =2  sfr   IEIP2     = 0xA9;
  38      =2  sfr   P3        = 0xB0;
C51 COMPILER V7.50   MAIN                                                                  09/24/2009 11:36:55 PAGE 2   

  39      =2  sfr   IP        = 0xB8;
  40      =2  sfr   ECON      = 0xB9;
  41      =2  sfr   ETIM1     = 0xBA;    //AR
  42      =2  sfr   ETIM2     = 0xBB;
  43      =2  sfr   EDATA1    = 0xBC;
  44      =2  sfr   EDATA2    = 0xBD;
  45      =2  sfr   EDATA3    = 0xBE;
  46      =2  sfr   EDATA4    = 0xBF;
  47      =2  sfr   WDCON     = 0xC0;
  48      =2  sfr   CHIPID    = 0xC2;
  49      =2  sfr   EADRL     = 0xC6;
  50      =2  sfr   T2CON     = 0xC8;
  51      =2  sfr   RCAP2L    = 0xCA;
  52      =2  sfr   RCAP2H    = 0xCB;
  53      =2  sfr   TL2       = 0xCC;
  54      =2  sfr   TH2       = 0xCD;
  55      =2  sfr   PSW       = 0xD0;
  56      =2  sfr   PLLCON    = 0xD7;
  57      =2  sfr   ADCCON2   = 0xD8;
  58      =2  sfr   ADCDATAL  = 0xD9;
  59      =2  sfr   ADCDATAH  = 0xDA;
  60      =2  sfr   PSMCON    = 0xDF;
  61      =2  sfr   ACC       = 0xE0;
  62      =2  sfr   I2CCON    = 0xE8;    //
  63      =2  sfr   DCON      = 0xE8;    //
  64      =2  sfr   ADCCON1   = 0xEF;
  65      =2  sfr   B         = 0xF0;
  66      =2  sfr   ADCOFSL   = 0xF1;
  67      =2  sfr   ADCOFSH   = 0xF2;
  68      =2  sfr   ADCGAINL  = 0xF3;
  69      =2  sfr   ADCGAINH  = 0xF4;
  70      =2  sfr   ADCCON3   = 0xF5;
  71      =2  sfr   SPIDAT    = 0xF7;
  72      =2  sfr   SPICON    = 0xF8;
  73      =2  sfr   DAC0L     = 0xF9;
  74      =2  sfr   DAC0H     = 0xFA;
  75      =2  sfr   DAC1L     = 0xFB;
  76      =2  sfr   DAC1H     = 0xFC;
  77      =2  sfr   DACCON    = 0xFD;
  78      =2  
  79      =2  /*------------------------------------------------------------------------------*/
  80      =2  /* TCON - регистр управлени€.                                                   */
  81      =2  /*------------------------------------------------------------------------------*/
  82      =2  sbit  TF1       = 0x8F;
  83      =2  sbit  TR1       = 0x8E;
  84      =2  sbit  TF0       = 0x8D;
  85      =2  sbit  TR0       = 0x8C;
  86      =2  sbit  IE1       = 0x8B;
  87      =2  sbit  IT1       = 0x8A;
  88      =2  sbit  IE0       = 0x89;
  89      =2  sbit  IT0       = 0x88;
  90      =2  
  91      =2  /*------------------------------------------------------------------------------*/
  92      =2  /* P1 - биты параллельного порта 1.                                             */
  93      =2  /*------------------------------------------------------------------------------*/
  94      =2  sbit  T2EX      = 0x91;
  95      =2  sbit  T2        = 0x90;
  96      =2  
  97      =2  /*------------------------------------------------------------------------------*/
  98      =2  /* SCON - регистр управлени€ UART.                                              */
  99      =2  /*------------------------------------------------------------------------------*/
 100      =2  sbit  SM0       = 0x9F;
C51 COMPILER V7.50   MAIN                                                                  09/24/2009 11:36:55 PAGE 3   

 101      =2  sbit  SM1       = 0x9E;
 102      =2  sbit  SM2       = 0x9D;
 103      =2  sbit  REN       = 0x9C;
 104      =2  sbit  TB8       = 0x9B;
 105      =2  sbit  RB8       = 0x9A;
 106      =2  sbit  TI        = 0x99;
 107      =2  sbit  RI        = 0x98;
 108      =2  
 109      =2  /*------------------------------------------------------------------------------*/
 110      =2  /* IE - регистр разрешени€ прерываний.                                          */
 111      =2  /*------------------------------------------------------------------------------*/
 112      =2  sbit  EA        = 0xAF;
 113      =2  sbit  EADC      = 0xAE;
 114      =2  sbit  ET2       = 0xAD;
 115      =2  sbit  ES        = 0xAC;
 116      =2  sbit  ET1       = 0xAB;
 117      =2  sbit  EX1       = 0xAA;
 118      =2  sbit  ET0       = 0xA9;
 119      =2  sbit  EX0       = 0xA8;
 120      =2  
 121      =2  /*------------------------------------------------------------------------------*/
 122      =2  /* P3 - биты параллельного порта 3.                                             */
 123      =2  /*------------------------------------------------------------------------------*/
 124      =2  sbit  RD        = 0xB7;
 125      =2  sbit  WR        = 0xB6;
 126      =2  sbit  T1        = 0xB5;
 127      =2  sbit  T0        = 0xB4;
 128      =2  sbit  INT1      = 0xB3;
 129      =2  sbit  INT0      = 0xB2;
 130      =2  sbit  TXD       = 0xB1;
 131      =2  sbit  RXD       = 0xB0;
 132      =2  
 133      =2  /*------------------------------------------------------------------------------*/
 134      =2  /* IP - регистр приоритетов прерываний.                                         */
 135      =2  /*------------------------------------------------------------------------------*/
 136      =2  sbit  PSI       = 0xBF;
 137      =2  sbit  PADC      = 0xBE;
 138      =2  sbit  PT2       = 0xBD;
 139      =2  sbit  PS        = 0xBC;
 140      =2  sbit  PT1       = 0xBB;
 141      =2  sbit  PX1       = 0xBA;
 142      =2  sbit  PT0       = 0xB9;
 143      =2  sbit  PX0       = 0xB8;
 144      =2  
 145      =2  /*------------------------------------------------------------------------------*/
 146      =2  /* WDCON - регистр управлени€ WatchDog таймером.                                */
 147      =2  /*------------------------------------------------------------------------------*/
 148      =2  sbit  PRE3      = 0xC7;
 149      =2  sbit  PRE2      = 0xC6;
 150      =2  sbit  PRE1      = 0xC5;
 151      =2  sbit  PRE0      = 0xC4;
 152      =2  sbit  WDIR      = 0xC3;
 153      =2  sbit  WDS       = 0xC2;
 154      =2  sbit  WDE       = 0xC1;
 155      =2  sbit  WDWR      = 0xC0;
 156      =2  
 157      =2  /*------------------------------------------------------------------------------*/
 158      =2  /* T2CON - дполнительный контрольный регистр.                                   */
 159      =2  /*------------------------------------------------------------------------------*/
 160      =2  sbit  TF2       = 0xCF;
 161      =2  sbit  EXF2      = 0xCE;
 162      =2  sbit  RCLK      = 0xCD;
C51 COMPILER V7.50   MAIN                                                                  09/24/2009 11:36:55 PAGE 4   

 163      =2  sbit  TCLK      = 0xCC;
 164      =2  sbit  EXEN2     = 0xCB;
 165      =2  sbit  TR2       = 0xCA;
 166      =2  sbit  CNT2      = 0xC9;
 167      =2  sbit  CAP2      = 0xC8;
 168      =2  
 169      =2  /*------------------------------------------------------------------------------*/
 170      =2  /* PSW - слово состо€ни€ программы.                                             */
 171      =2  /*------------------------------------------------------------------------------*/
 172      =2  sbit  CY        = 0xD7;
 173      =2  sbit  AC        = 0xD6;
 174      =2  sbit  F0        = 0xD5;
 175      =2  sbit  RS1       = 0xD4;
 176      =2  sbit  RS0       = 0xD3;
 177      =2  sbit  OV        = 0xD2;
 178      =2  sbit  F1        = 0xD1;
 179      =2  sbit  P         = 0xD0;
 180      =2  
 181      =2  /* ADCCON2 */
 182      =2  sbit  ADCI      = 0xDF;
 183      =2  sbit  ADCSPI    = 0xDE;
 184      =2  sbit  CCONV     = 0xDD;
 185      =2  sbit  SCONV     = 0xDC;
 186      =2  sbit  CS3       = 0xDB;
 187      =2  sbit  CS2       = 0xDA;
 188      =2  sbit  CS1       = 0xD9;
 189      =2  sbit  CS0       = 0xD8;
 190      =2  
 191      =2  /*  I2CCON  */
 192      =2  sbit  MDO       = I2CCON^7;
 193      =2  sbit  MDE       = I2CCON^6;
 194      =2  sbit  MCO       = I2CCON^5;
 195      =2  sbit  MDI       = I2CCON^4;
 196      =2  sbit  I2CM      = I2CCON^3;
 197      =2  sbit  I2CRS     = I2CCON^2;
 198      =2  sbit  I2CTX     = I2CCON^1;
 199      =2  sbit  I2CI      = I2CCON^0;
 200      =2  
 201      =2  /*  DCON  */
 202      =2  sbit  D1        = DCON^7;
 203      =2  sbit  D1EN      = DCON^6;
 204      =2  sbit  D0        = DCON^5;
 205      =2  sbit  D0EN      = DCON^3;
 206      =2  
 207      =2  /* SPICON */
 208      =2  sbit  ISPI      = 0xFF;
 209      =2  sbit  WCOL      = 0xFE;
 210      =2  sbit  SPE       = 0xFD;
 211      =2  sbit  SPIM      = 0xFC;
 212      =2  sbit  CPOL      = 0xFB;
 213      =2  sbit  CPHA      = 0xFA;
 214      =2  sbit  SPR1      = 0xF9;
 215      =2  sbit  SPR0      = 0xF8;
 216      =2  
 217      =2  /*------------------------------------------------------------------------------*/
 218      =2  /* P0..3 - биты параллельного порта 0...3                                       */
 219      =2  /*------------------------------------------------------------------------------*/
 220      =2  
 221      =2  sbit P17        = 0x97;
 222      =2  sbit P16        = 0x96;
 223      =2  sbit P15        = 0x95;
 224      =2  sbit P14        = 0x94;
C51 COMPILER V7.50   MAIN                                                                  09/24/2009 11:36:55 PAGE 5   

 225      =2  sbit P13        = 0x93;
 226      =2  sbit P12        = 0x92;
 227      =2  sbit P11        = 0x91;
 228      =2  sbit P10        = 0x90;
 229      =2  
 230      =2  sbit P37        = 0xB7;
 231      =2  sbit P36        = 0xB6;
 232      =2  sbit P35        = 0xB5;
 233      =2  sbit P34        = 0xB4;
 234      =2  sbit P33        = 0xB3;
 235      =2  sbit P32        = 0xB2;
 236      =2  sbit P31        = 0xB1;
 237      =2  sbit P30        = 0xB0;
 238      =2  
 239      =2  #define IDL     0x01            /* Ѕит переключени€ в режим холостого хода.     */
 240      =2  
 241      =2  /*------------------------------------------------------------------------------*/
 242      =2  /* ћакрокоманда перевода процессора в режим пониженного потреблени€.            */
 243      =2  /* ѕринимает:           Ќичего не принимает.                                    */
 244      =2  /* ¬озвращает:          Ќичего не возвращает.                                   */
 245      =2  /*------------------------------------------------------------------------------*/
 246      =2  #define IDLE()  PCON|=IDL
 247      =2  
 248      =2  #endif
 249      =2  
  11      =1  
  12      =1  #define XOUT P10
  13      =1  #define YOUT P11
  14      =1  
  15      =1  // прототипы 'c'-функций в файле 'Main.c'
  16      =1  void meas_xy(void);
  17      =1  void Tx_means(void);
  18      =1  void Tx_byte(char outbyte);
  19      =1  
  20      =1  #endif
  21      =1  
   8          
   9          // коэффициент усреднени€
  10          #define NSUM 25
  11          
  12          /*==============================================================================*/
  13          /*                                ќписание типов                                */
  14          /*==============================================================================*/
  15          union u_int                                 // дл€ 2-х байтовых данных
  16            {
  17             unsigned int  du_i;                      // data_union_int
  18             unsigned char du_c[2];                   // data_union_char
  19            };                                        // 256*[0] + [1]
  20          
  21          idata struct MEASURE {                      // описание структуры 1-го замера
  22            union u_int T1X;
  23            union u_int T2X;
  24            union u_int T1Y;
  25            union u_int T2Y;  };
  26          /*==============================================================================*/
  27          /*                      √лобальные переменные программы.                        */
  28          /*==============================================================================*/
  29          idata struct MEASURE Buff[NSUM];           // очередь замеров
  30          data struct MEASURE one;                   // 1-н замер
  31          data struct MEASURE Z;                     // 1-н ”—–≈ƒЌ≈ЌЌџ… замер
  32          
  33          unsigned long s1, s2, s3, s4;              // 0..0x0ffffffff
C51 COMPILER V7.50   MAIN                                                                  09/24/2009 11:36:55 PAGE 6   

  34          unsigned char i;                           // 0..0x0ff
  35          unsigned char get_one;                     // номер замера
  36          unsigned int n1, n2, n3, n4;
  37          
  38          /*==============================================================================*/
  39          /*                                                                              */
  40          /*                         √лавна€ функци€ программы.                           */
  41          /*                                                                              */
  42          /*==============================================================================*/
  43          void main(void)
  44          {
  45   1        IE = 0;                                  // все прерывани€ запрещены
  46   1      
  47   1      // настройка синтезатора
  48   1        PLLCON = 0x001;                          // синтезатор рабочей частоты €дра
  49   1                                                 // Core Clk = XTALL*256 = 32768*256 = 8388608 герц
  50   1      // настройка сторожевого таймера
  51   1        WDWR = 1;                                // разрешение записи в 'WDCON'
  52   1        WDCON = 0x072;                           // запуск WDT с временным интервалом 2с
  53   1      
  54   1      // настройка UART:
  55   1        SCON = 0x040;                            // настройка последовательного порта на 
  56   1                                                 // асинхронный 8-битовый режим
  57   1      // настройка “/—0:
  58   1        TMOD = 0x001;                            // T/C0 - таймер
  59   1      
  60   1      // настройка “/—2:
  61   1        RCAP2H = 0x0FF;                          // задание скорости 9600 бод 
  62   1        RCAP2L = 0x0E5;                          // (814code_asm)
  63   1        TH2    = 0x0FF;       
  64   1        TL2    = 0x0E5; 
  65   1        T2CON  = 0x030;                          // установка “/—2 в качестве генератора скорости UART
  66   1        TR2    = 1;                              // запуск генератора скорости 'UART'
  67   1      
  68   1        s1=0; n1=0;
  69   1        s2=0; n2=0;
  70   1        s3=0; n3=0;
  71   1        s4=0; n4=0;
  72   1       
  73   1        for (i=0; i<25; i++) {Buff[i].T1X.du_i=0; 
  74   2                              Buff[i].T2X.du_i=0; 
  75   2                                                      Buff[i].T1Y.du_i=0; 
  76   2                                                      Buff[i].T2Y.du_i=0;}
  77   1        for(;;)
  78   1        {
  79   2          meas_xy();                             // получаем один замер
  80   2      
  81   2      //  расчет "скольз€щего среднего":
  82   2                                                 
  83   2              s1 -= Buff[n1].T1X.du_i;
  84   2              s1 += one.T1X.du_i;
  85   2              Buff[n1].T1X.du_i=one.T1X.du_i;
  86   2              n1++;
  87   2              if (n1==NSUM) n1=0;
  88   2              Z.T1X.du_i=s1/NSUM;
  89   2      
  90   2              s2 -= Buff[n2].T2X.du_i;
  91   2              s2 += one.T2X.du_i;
  92   2              Buff[n2].T2X.du_i=one.T2X.du_i;
  93   2              n2++;
  94   2              if (n2==NSUM) n2=0;
  95   2              Z.T2X.du_i=s2/NSUM;
C51 COMPILER V7.50   MAIN                                                                  09/24/2009 11:36:55 PAGE 7   

  96   2      
  97   2              s3 -= Buff[n3].T1Y.du_i;
  98   2              s3 += one.T1Y.du_i;
  99   2              Buff[n3].T1Y.du_i=one.T1Y.du_i;
 100   2              n3++;
 101   2              if (n3==NSUM) n3=0;
 102   2              Z.T1Y.du_i=s3/NSUM;
 103   2      
 104   2              s4 -= Buff[n4].T2Y.du_i;
 105   2              s4 += one.T2Y.du_i;
 106   2              Buff[n4].T2Y.du_i=one.T2Y.du_i;
 107   2              n4++;
 108   2              if (n4==NSUM) n4=0;
 109   2              Z.T2Y.du_i=s4/NSUM;       
 110   2      
 111   2          Tx_means();                           // выводим "среднее" в 'UART'
 112   2      
 113   2      // сброс сторожевого таймера
 114   2          EA   = 0;
 115   2          WDWR = 1;
 116   2          WDE  = 1;
 117   2          EA   = 1;
 118   2        }
 119   1      }
 120          
 121          void meas_xy(void)
 122          {
 123   1      // измерение длительности и периода импульсов с выхода 'Xout' -------= X =--------
 124   1      
 125   1        TH0 = 0; TL0 = 0;                        // сброс 'T0'
 126   1        while(XOUT);                             // корректировка расчета длительности импульсов с выхода 'Xout'
 127   1        while(!XOUT);                            // ожидание фронта 1-го импульса с выхода 'Xout'
 128   1        TR0 = 1;                                 // запуск 'T0'
 129   1      
 130   1        while(XOUT);                             // ожидание спада 1-го импульса с выхода 'Xout'
 131   1        TR0 = 0;                                 // останов 'T0'
 132   1        one.T1X.du_c[0] = TH0;
 133   1        one.T1X.du_c[1] = TL0;                   // -= ƒЋ»“≈Ћ№Ќќ—“№ »ћѕ”Ћ№—ј 'X' =-    *
 134   1        TH0 = 0; TL0 = 0;                        // сброс 'T0'
 135   1      
 136   1        while(XOUT);                             // корректировка расчета периода импульсов с выхода 'Xout'
 137   1        while(!XOUT);                            // ожидание фронта 2-го импульса с выхода 'Xout'
 138   1        TR0 = 1;                                 // запуск 'T0'
 139   1      
 140   1        while(XOUT);                             // ожидание спада 2-го импульса с выхода 'Xout'
 141   1        while(!XOUT);                            // ожидание фронта 3-го импульса с выхода 'Xout'
 142   1        TR0 = 0;                                 // останов 'T0'
 143   1        one.T2X.du_c[0] = TH0;
 144   1        one.T2X.du_c[1] = TL0;                   // -= ѕ≈–»ќƒ »ћѕ”Ћ№—ј 'X' =-          *
 145   1      
 146   1      // измерение длительности и периода импульсов с выхода 'Yout' -------= 'Y' =------
 147   1      
 148   1        TH0 = 0; TL0 = 0;                        // сброс 'T0'
 149   1        while(YOUT);                             // корректировка расчета длительности импульсов с выхода 'Yout'
 150   1        while(!YOUT);                            // ожидание фронта 1-го импульса с выхода 'Yout'
 151   1        TR0 = 1;                                 // запуск 'T0'
 152   1      
 153   1        while(YOUT);                             // ожидание спада 1-го импульса с выхода 'Yout'
 154   1        TR0 = 0;                                 // останов 'T0'
 155   1        one.T1Y.du_c[0] = TH0;
 156   1        one.T1Y.du_c[1] = TL0;                   // -= ƒЋ»“≈Ћ№Ќќ—“№ »ћѕ”Ћ№—ј 'Y' =-    *
 157   1        TH0 = 0; TL0 = 0;                        // сброс 'T0'
C51 COMPILER V7.50   MAIN                                                                  09/24/2009 11:36:55 PAGE 8   

 158   1      
 159   1        while(YOUT);                             // корректировка расчета периода импульсов с выхода 'Yout'
 160   1        while(!YOUT);                            // ожидание фронта 2-го импульса с выхода 'Yout'
 161   1        TR0 = 1;                                 // запуск 'T0'
 162   1      
 163   1        while(YOUT);                             // ожидание спада 2-го импульса с выхода 'Yout'
 164   1        while(!YOUT);                            // ожидание фронта 3-го импульса с выхода 'Yout'
 165   1        TR0 = 0;                                 // останов 'T0'
 166   1        one.T2Y.du_c[0] = TH0;
 167   1        one.T2Y.du_c[1] = TL0;                   // -= ѕ≈–»ќƒ »ћѕ”Ћ№—ј 'Y' =-          *
 168   1        TH0 = 0; TL0 = 0;                        // сброс 'T0'
 169   1      }
 170          
 171          void Tx_means(void)
 172          {                                          // из пам€ти побайтно
 173   1        unsigned char d, cc;                     // и выводим в 'UART'
 174   1      
 175   1        cc = 0x05a;
 176   1        Tx_byte(cc);
 177   1      
 178   1        d = Z.T1X.du_c[1]; cc += d; Tx_byte(d);
 179   1        d = Z.T1X.du_c[0]; cc += d; Tx_byte(d);
 180   1        d = Z.T2X.du_c[1]; cc += d; Tx_byte(d);
 181   1        d = Z.T2X.du_c[0]; cc += d; Tx_byte(d);
 182   1      
 183   1        d = Z.T1Y.du_c[1]; cc += d; Tx_byte(d);
 184   1        d = Z.T1Y.du_c[0]; cc += d; Tx_byte(d);
 185   1        d = Z.T2Y.du_c[1]; cc += d; Tx_byte(d);
 186   1        d = Z.T2Y.du_c[0]; cc += d; Tx_byte(d);
 187   1      
 188   1        Tx_byte(cc);
 189   1      }
 190          
 191          void Tx_byte(char outbyte)                 // вывод байта в 'UART'
 192          {
 193   1        SBUF = outbyte;
 194   1        while (!TI);
 195   1        TI = 0;
 196   1      }
C51 COMPILER V7.50   MAIN                                                                  09/24/2009 11:36:55 PAGE 9   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION main (BEGIN)
                                           ; SOURCE LINE # 43
                                           ; SOURCE LINE # 44
                                           ; SOURCE LINE # 45
0000 E4                CLR     A
0001 F5A8              MOV     IE,A
                                           ; SOURCE LINE # 48
0003 75D701            MOV     PLLCON,#01H
                                           ; SOURCE LINE # 51
0006 D2C0              SETB    WDWR
                                           ; SOURCE LINE # 52
0008 75C072            MOV     WDCON,#072H
                                           ; SOURCE LINE # 55
000B 759840            MOV     SCON,#040H
                                           ; SOURCE LINE # 58
000E 758901            MOV     TMOD,#01H
                                           ; SOURCE LINE # 61
0011 75CBFF            MOV     RCAP2H,#0FFH
                                           ; SOURCE LINE # 62
0014 75CAE5            MOV     RCAP2L,#0E5H
                                           ; SOURCE LINE # 63
0017 75CDFF            MOV     TH2,#0FFH
                                           ; SOURCE LINE # 64
001A 75CCE5            MOV     TL2,#0E5H
                                           ; SOURCE LINE # 65
001D 75C830            MOV     T2CON,#030H
                                           ; SOURCE LINE # 66
0020 D2CA              SETB    TR2
                                           ; SOURCE LINE # 68
0022 F500        R     MOV     s1+03H,A
0024 F500        R     MOV     s1+02H,A
0026 F500        R     MOV     s1+01H,A
0028 F500        R     MOV     s1,A
002A F500        R     MOV     n1,A
002C F500        R     MOV     n1+01H,A
                                           ; SOURCE LINE # 69
002E F500        R     MOV     s2+03H,A
0030 F500        R     MOV     s2+02H,A
0032 F500        R     MOV     s2+01H,A
0034 F500        R     MOV     s2,A
0036 F500        R     MOV     n2,A
0038 F500        R     MOV     n2+01H,A
                                           ; SOURCE LINE # 70
003A F500        R     MOV     s3+03H,A
003C F500        R     MOV     s3+02H,A
003E F500        R     MOV     s3+01H,A
0040 F500        R     MOV     s3,A
0042 F500        R     MOV     n3,A
0044 F500        R     MOV     n3+01H,A
                                           ; SOURCE LINE # 71
0046 F500        R     MOV     s4+03H,A
0048 F500        R     MOV     s4+02H,A
004A F500        R     MOV     s4+01H,A
004C F500        R     MOV     s4,A
004E F500        R     MOV     n4,A
0050 F500        R     MOV     n4+01H,A
                                           ; SOURCE LINE # 73
0052 F500        R     MOV     i,A
0054         ?C0001:
C51 COMPILER V7.50   MAIN                                                                  09/24/2009 11:36:55 PAGE 10  

0054 E500        R     MOV     A,i
0056 75F008            MOV     B,#08H
0059 A4                MUL     AB
005A 2400        R     ADD     A,#LOW Buff
005C F8                MOV     R0,A
005D E4                CLR     A
005E F6                MOV     @R0,A
005F 08                INC     R0
0060 F6                MOV     @R0,A
                                           ; SOURCE LINE # 74
0061 E500        R     MOV     A,i
0063 75F008            MOV     B,#08H
0066 A4                MUL     AB
0067 2400        R     ADD     A,#LOW Buff+02H
0069 F8                MOV     R0,A
006A E4                CLR     A
006B F6                MOV     @R0,A
006C 08                INC     R0
006D F6                MOV     @R0,A
                                           ; SOURCE LINE # 75
006E E500        R     MOV     A,i
0070 75F008            MOV     B,#08H
0073 A4                MUL     AB
0074 2400        R     ADD     A,#LOW Buff+04H
0076 F8                MOV     R0,A
0077 E4                CLR     A
0078 F6                MOV     @R0,A
0079 08                INC     R0
007A F6                MOV     @R0,A
                                           ; SOURCE LINE # 76
007B E500        R     MOV     A,i
007D 75F008            MOV     B,#08H
0080 A4                MUL     AB
0081 2400        R     ADD     A,#LOW Buff+06H
0083 F8                MOV     R0,A
0084 E4                CLR     A
0085 F6                MOV     @R0,A
0086 08                INC     R0
0087 F6                MOV     @R0,A
0088 0500        R     INC     i
008A E500        R     MOV     A,i
008C B419C5            CJNE    A,#019H,?C0001
                                           ; SOURCE LINE # 77
008F         ?C0004:
                                           ; SOURCE LINE # 78
                                           ; SOURCE LINE # 79
008F 120000      R     LCALL   meas_xy
                                           ; SOURCE LINE # 83
0092 E500        R     MOV     A,n1+01H
0094 75F008            MOV     B,#08H
0097 A4                MUL     AB
0098 2400        R     ADD     A,#LOW Buff
009A F8                MOV     R0,A
009B E6                MOV     A,@R0
009C FE                MOV     R6,A
009D 08                INC     R0
009E E6                MOV     A,@R0
009F FB                MOV     R3,A
00A0 AA06              MOV     R2,AR6
00A2 C3                CLR     C
00A3 E500        R     MOV     A,s1+03H
00A5 9B                SUBB    A,R3
C51 COMPILER V7.50   MAIN                                                                  09/24/2009 11:36:55 PAGE 11  

00A6 F500        R     MOV     s1+03H,A
00A8 E500        R     MOV     A,s1+02H
00AA 9A                SUBB    A,R2
00AB F500        R     MOV     s1+02H,A
00AD E500        R     MOV     A,s1+01H
00AF 9400              SUBB    A,#00H
00B1 F500        R     MOV     s1+01H,A
00B3 E500        R     MOV     A,s1
00B5 9400              SUBB    A,#00H
00B7 F500        R     MOV     s1,A
                                           ; SOURCE LINE # 84
00B9 E4                CLR     A
00BA FC                MOV     R4,A
00BB FD                MOV     R5,A
00BC E500        R     MOV     A,s1+03H
00BE 2500        R     ADD     A,one+01H
00C0 F500        R     MOV     s1+03H,A
00C2 E500        R     MOV     A,s1+02H
00C4 3500        R     ADDC    A,one
00C6 F500        R     MOV     s1+02H,A
00C8 ED                MOV     A,R5
00C9 3500        R     ADDC    A,s1+01H
00CB F500        R     MOV     s1+01H,A
00CD EC                MOV     A,R4
00CE 3500        R     ADDC    A,s1
00D0 F500        R     MOV     s1,A
                                           ; SOURCE LINE # 85
00D2 E500        R     MOV     A,n1+01H
00D4 75F008            MOV     B,#08H
00D7 A4                MUL     AB
00D8 2400        R     ADD     A,#LOW Buff
00DA F8                MOV     R0,A
00DB A600        R     MOV     @R0,one
00DD 08                INC     R0
00DE A600        R     MOV     @R0,one+01H
                                           ; SOURCE LINE # 86
00E0 0500        R     INC     n1+01H
00E2 E500        R     MOV     A,n1+01H
00E4 7002              JNZ     ?C0044
00E6 0500        R     INC     n1
00E8         ?C0044:
                                           ; SOURCE LINE # 87
00E8 6419              XRL     A,#019H
00EA 4500        R     ORL     A,n1
00EC 7004              JNZ     ?C0006
00EE F500        R     MOV     n1,A
00F0 F500        R     MOV     n1+01H,A
00F2         ?C0006:
                                           ; SOURCE LINE # 88
00F2 E4                CLR     A
00F3 7B19              MOV     R3,#019H
00F5 FA                MOV     R2,A
00F6 F9                MOV     R1,A
00F7 F8                MOV     R0,A
00F8 AF00        R     MOV     R7,s1+03H
00FA AE00        R     MOV     R6,s1+02H
00FC AD00        R     MOV     R5,s1+01H
00FE AC00        R     MOV     R4,s1
0100 120000      E     LCALL   ?C?ULDIV
0103 8E00        R     MOV     Z,R6
0105 8F00        R     MOV     Z+01H,R7
                                           ; SOURCE LINE # 90
C51 COMPILER V7.50   MAIN                                                                  09/24/2009 11:36:55 PAGE 12  

0107 E500        R     MOV     A,n2+01H
0109 75F008            MOV     B,#08H
010C A4                MUL     AB
010D 2400        R     ADD     A,#LOW Buff+02H
010F F8                MOV     R0,A
0110 E6                MOV     A,@R0
0111 FE                MOV     R6,A
0112 08                INC     R0
0113 E6                MOV     A,@R0
0114 FB                MOV     R3,A
0115 AA06              MOV     R2,AR6
0117 C3                CLR     C
0118 E500        R     MOV     A,s2+03H
011A 9B                SUBB    A,R3
011B F500        R     MOV     s2+03H,A
011D E500        R     MOV     A,s2+02H
011F 9A                SUBB    A,R2
0120 F500        R     MOV     s2+02H,A
0122 E500        R     MOV     A,s2+01H
0124 9400              SUBB    A,#00H
0126 F500        R     MOV     s2+01H,A
0128 E500        R     MOV     A,s2
012A 9400              SUBB    A,#00H
012C F500        R     MOV     s2,A
                                           ; SOURCE LINE # 91
012E E4                CLR     A
012F FC                MOV     R4,A
0130 FD                MOV     R5,A
0131 E500        R     MOV     A,s2+03H
0133 2500        R     ADD     A,one+03H
0135 F500        R     MOV     s2+03H,A
0137 E500        R     MOV     A,s2+02H
0139 3500        R     ADDC    A,one+02H
013B F500        R     MOV     s2+02H,A
013D ED                MOV     A,R5
013E 3500        R     ADDC    A,s2+01H
0140 F500        R     MOV     s2+01H,A
0142 EC                MOV     A,R4
0143 3500        R     ADDC    A,s2
0145 F500        R     MOV     s2,A
                                           ; SOURCE LINE # 92
0147 E500        R     MOV     A,n2+01H
0149 75F008            MOV     B,#08H
014C A4                MUL     AB
014D 2400        R     ADD     A,#LOW Buff+02H
014F F8                MOV     R0,A
0150 A600        R     MOV     @R0,one+02H
0152 08                INC     R0
0153 A600        R     MOV     @R0,one+03H
                                           ; SOURCE LINE # 93
0155 0500        R     INC     n2+01H
0157 E500        R     MOV     A,n2+01H
0159 7002              JNZ     ?C0045
015B 0500        R     INC     n2
015D         ?C0045:
                                           ; SOURCE LINE # 94
015D 6419              XRL     A,#019H
015F 4500        R     ORL     A,n2
0161 7004              JNZ     ?C0007
0163 F500        R     MOV     n2,A
0165 F500        R     MOV     n2+01H,A
0167         ?C0007:
C51 COMPILER V7.50   MAIN                                                                  09/24/2009 11:36:55 PAGE 13  

                                           ; SOURCE LINE # 95
0167 E4                CLR     A
0168 7B19              MOV     R3,#019H
016A FA                MOV     R2,A
016B F9                MOV     R1,A
016C F8                MOV     R0,A
016D AF00        R     MOV     R7,s2+03H
016F AE00        R     MOV     R6,s2+02H
0171 AD00        R     MOV     R5,s2+01H
0173 AC00        R     MOV     R4,s2
0175 120000      E     LCALL   ?C?ULDIV
0178 8E00        R     MOV     Z+02H,R6
017A 8F00        R     MOV     Z+03H,R7
                                           ; SOURCE LINE # 97
017C E500        R     MOV     A,n3+01H
017E 75F008            MOV     B,#08H
0181 A4                MUL     AB
0182 2400        R     ADD     A,#LOW Buff+04H
0184 F8                MOV     R0,A
0185 E6                MOV     A,@R0
0186 FE                MOV     R6,A
0187 08                INC     R0
0188 E6                MOV     A,@R0
0189 FB                MOV     R3,A
018A AA06              MOV     R2,AR6
018C C3                CLR     C
018D E500        R     MOV     A,s3+03H
018F 9B                SUBB    A,R3
0190 F500        R     MOV     s3+03H,A
0192 E500        R     MOV     A,s3+02H
0194 9A                SUBB    A,R2
0195 F500        R     MOV     s3+02H,A
0197 E500        R     MOV     A,s3+01H
0199 9400              SUBB    A,#00H
019B F500        R     MOV     s3+01H,A
019D E500        R     MOV     A,s3
019F 9400              SUBB    A,#00H
01A1 F500        R     MOV     s3,A
                                           ; SOURCE LINE # 98
01A3 E4                CLR     A
01A4 FC                MOV     R4,A
01A5 FD                MOV     R5,A
01A6 E500        R     MOV     A,s3+03H
01A8 2500        R     ADD     A,one+05H
01AA F500        R     MOV     s3+03H,A
01AC E500        R     MOV     A,s3+02H
01AE 3500        R     ADDC    A,one+04H
01B0 F500        R     MOV     s3+02H,A
01B2 ED                MOV     A,R5
01B3 3500        R     ADDC    A,s3+01H
01B5 F500        R     MOV     s3+01H,A
01B7 EC                MOV     A,R4
01B8 3500        R     ADDC    A,s3
01BA F500        R     MOV     s3,A
                                           ; SOURCE LINE # 99
01BC E500        R     MOV     A,n3+01H
01BE 75F008            MOV     B,#08H
01C1 A4                MUL     AB
01C2 2400        R     ADD     A,#LOW Buff+04H
01C4 F8                MOV     R0,A
01C5 A600        R     MOV     @R0,one+04H
01C7 08                INC     R0
C51 COMPILER V7.50   MAIN                                                                  09/24/2009 11:36:55 PAGE 14  

01C8 A600        R     MOV     @R0,one+05H
                                           ; SOURCE LINE # 100
01CA 0500        R     INC     n3+01H
01CC E500        R     MOV     A,n3+01H
01CE 7002              JNZ     ?C0046
01D0 0500        R     INC     n3
01D2         ?C0046:
                                           ; SOURCE LINE # 101
01D2 6419              XRL     A,#019H
01D4 4500        R     ORL     A,n3
01D6 7004              JNZ     ?C0008
01D8 F500        R     MOV     n3,A
01DA F500        R     MOV     n3+01H,A
01DC         ?C0008:
                                           ; SOURCE LINE # 102
01DC E4                CLR     A
01DD 7B19              MOV     R3,#019H
01DF FA                MOV     R2,A
01E0 F9                MOV     R1,A
01E1 F8                MOV     R0,A
01E2 AF00        R     MOV     R7,s3+03H
01E4 AE00        R     MOV     R6,s3+02H
01E6 AD00        R     MOV     R5,s3+01H
01E8 AC00        R     MOV     R4,s3
01EA 120000      E     LCALL   ?C?ULDIV
01ED 8E00        R     MOV     Z+04H,R6
01EF 8F00        R     MOV     Z+05H,R7
                                           ; SOURCE LINE # 104
01F1 E500        R     MOV     A,n4+01H
01F3 75F008            MOV     B,#08H
01F6 A4                MUL     AB
01F7 2400        R     ADD     A,#LOW Buff+06H
01F9 F8                MOV     R0,A
01FA E6                MOV     A,@R0
01FB FE                MOV     R6,A
01FC 08                INC     R0
01FD E6                MOV     A,@R0
01FE FB                MOV     R3,A
01FF AA06              MOV     R2,AR6
0201 C3                CLR     C
0202 E500        R     MOV     A,s4+03H
0204 9B                SUBB    A,R3
0205 F500        R     MOV     s4+03H,A
0207 E500        R     MOV     A,s4+02H
0209 9A                SUBB    A,R2
020A F500        R     MOV     s4+02H,A
020C E500        R     MOV     A,s4+01H
020E 9400              SUBB    A,#00H
0210 F500        R     MOV     s4+01H,A
0212 E500        R     MOV     A,s4
0214 9400              SUBB    A,#00H
0216 F500        R     MOV     s4,A
                                           ; SOURCE LINE # 105
0218 E4                CLR     A
0219 FC                MOV     R4,A
021A FD                MOV     R5,A
021B E500        R     MOV     A,s4+03H
021D 2500        R     ADD     A,one+07H
021F F500        R     MOV     s4+03H,A
0221 E500        R     MOV     A,s4+02H
0223 3500        R     ADDC    A,one+06H
0225 F500        R     MOV     s4+02H,A
C51 COMPILER V7.50   MAIN                                                                  09/24/2009 11:36:55 PAGE 15  

0227 ED                MOV     A,R5
0228 3500        R     ADDC    A,s4+01H
022A F500        R     MOV     s4+01H,A
022C EC                MOV     A,R4
022D 3500        R     ADDC    A,s4
022F F500        R     MOV     s4,A
                                           ; SOURCE LINE # 106
0231 E500        R     MOV     A,n4+01H
0233 75F008            MOV     B,#08H
0236 A4                MUL     AB
0237 2400        R     ADD     A,#LOW Buff+06H
0239 F8                MOV     R0,A
023A A600        R     MOV     @R0,one+06H
023C 08                INC     R0
023D A600        R     MOV     @R0,one+07H
                                           ; SOURCE LINE # 107
023F 0500        R     INC     n4+01H
0241 E500        R     MOV     A,n4+01H
0243 7002              JNZ     ?C0047
0245 0500        R     INC     n4
0247         ?C0047:
                                           ; SOURCE LINE # 108
0247 6419              XRL     A,#019H
0249 4500        R     ORL     A,n4
024B 7004              JNZ     ?C0009
024D F500        R     MOV     n4,A
024F F500        R     MOV     n4+01H,A
0251         ?C0009:
                                           ; SOURCE LINE # 109
0251 E4                CLR     A
0252 7B19              MOV     R3,#019H
0254 FA                MOV     R2,A
0255 F9                MOV     R1,A
0256 F8                MOV     R0,A
0257 AF00        R     MOV     R7,s4+03H
0259 AE00        R     MOV     R6,s4+02H
025B AD00        R     MOV     R5,s4+01H
025D AC00        R     MOV     R4,s4
025F 120000      E     LCALL   ?C?ULDIV
0262 8E00        R     MOV     Z+06H,R6
0264 8F00        R     MOV     Z+07H,R7
                                           ; SOURCE LINE # 111
0266 120000      R     LCALL   Tx_means
                                           ; SOURCE LINE # 114
0269 C2AF              CLR     EA
                                           ; SOURCE LINE # 115
026B D2C0              SETB    WDWR
                                           ; SOURCE LINE # 116
026D D2C1              SETB    WDE
                                           ; SOURCE LINE # 117
026F D2AF              SETB    EA
                                           ; SOURCE LINE # 118
0271 020000      R     LJMP    ?C0004
             ; FUNCTION main (END)

             ; FUNCTION meas_xy (BEGIN)
                                           ; SOURCE LINE # 121
                                           ; SOURCE LINE # 122
                                           ; SOURCE LINE # 125
0000 E4                CLR     A
0001 F58C              MOV     TH0,A
0003 F58A              MOV     TL0,A
C51 COMPILER V7.50   MAIN                                                                  09/24/2009 11:36:55 PAGE 16  

0005         ?C0011:
                                           ; SOURCE LINE # 126
0005 2090FD            JB      P10,?C0011
0008         ?C0013:
                                           ; SOURCE LINE # 127
0008 3090FD            JNB     P10,?C0013
000B         ?C0014:
                                           ; SOURCE LINE # 128
000B D28C              SETB    TR0
000D         ?C0015:
                                           ; SOURCE LINE # 130
000D 2090FD            JB      P10,?C0015
0010         ?C0016:
                                           ; SOURCE LINE # 131
0010 C28C              CLR     TR0
                                           ; SOURCE LINE # 132
0012 858C00      R     MOV     one,TH0
                                           ; SOURCE LINE # 133
0015 858A00      R     MOV     one+01H,TL0
                                           ; SOURCE LINE # 134
0018 E4                CLR     A
0019 F58C              MOV     TH0,A
001B F58A              MOV     TL0,A
001D         ?C0017:
                                           ; SOURCE LINE # 136
001D 2090FD            JB      P10,?C0017
0020         ?C0019:
                                           ; SOURCE LINE # 137
0020 3090FD            JNB     P10,?C0019
0023         ?C0020:
                                           ; SOURCE LINE # 138
0023 D28C              SETB    TR0
0025         ?C0021:
                                           ; SOURCE LINE # 140
0025 2090FD            JB      P10,?C0021
0028         ?C0023:
                                           ; SOURCE LINE # 141
0028 3090FD            JNB     P10,?C0023
002B         ?C0024:
                                           ; SOURCE LINE # 142
002B C28C              CLR     TR0
                                           ; SOURCE LINE # 143
002D 858C00      R     MOV     one+02H,TH0
                                           ; SOURCE LINE # 144
0030 858A00      R     MOV     one+03H,TL0
                                           ; SOURCE LINE # 148
0033 E4                CLR     A
0034 F58C              MOV     TH0,A
0036 F58A              MOV     TL0,A
0038         ?C0025:
                                           ; SOURCE LINE # 149
0038 2091FD            JB      P11,?C0025
003B         ?C0027:
                                           ; SOURCE LINE # 150
003B 3091FD            JNB     P11,?C0027
003E         ?C0028:
                                           ; SOURCE LINE # 151
003E D28C              SETB    TR0
0040         ?C0029:
                                           ; SOURCE LINE # 153
0040 2091FD            JB      P11,?C0029
0043         ?C0030:
C51 COMPILER V7.50   MAIN                                                                  09/24/2009 11:36:55 PAGE 17  

                                           ; SOURCE LINE # 154
0043 C28C              CLR     TR0
                                           ; SOURCE LINE # 155
0045 858C00      R     MOV     one+04H,TH0
                                           ; SOURCE LINE # 156
0048 858A00      R     MOV     one+05H,TL0
                                           ; SOURCE LINE # 157
004B E4                CLR     A
004C F58C              MOV     TH0,A
004E F58A              MOV     TL0,A
0050         ?C0031:
                                           ; SOURCE LINE # 159
0050 2091FD            JB      P11,?C0031
0053         ?C0033:
                                           ; SOURCE LINE # 160
0053 3091FD            JNB     P11,?C0033
0056         ?C0034:
                                           ; SOURCE LINE # 161
0056 D28C              SETB    TR0
0058         ?C0035:
                                           ; SOURCE LINE # 163
0058 2091FD            JB      P11,?C0035
005B         ?C0037:
                                           ; SOURCE LINE # 164
005B 3091FD            JNB     P11,?C0037
005E         ?C0038:
                                           ; SOURCE LINE # 165
005E C28C              CLR     TR0
                                           ; SOURCE LINE # 166
0060 858C00      R     MOV     one+06H,TH0
                                           ; SOURCE LINE # 167
0063 858A00      R     MOV     one+07H,TL0
                                           ; SOURCE LINE # 168
0066 E4                CLR     A
0067 F58C              MOV     TH0,A
0069 F58A              MOV     TL0,A
                                           ; SOURCE LINE # 169
006B 22                RET     
             ; FUNCTION meas_xy (END)

             ; FUNCTION Tx_means (BEGIN)
                                           ; SOURCE LINE # 171
                                           ; SOURCE LINE # 172
                                           ; SOURCE LINE # 175
0000 75005A      R     MOV     cc,#05AH
                                           ; SOURCE LINE # 176
0003 AF00        R     MOV     R7,cc
0005 120000      R     LCALL   _Tx_byte
                                           ; SOURCE LINE # 178
;---- Variable 'd' assigned to Register 'R7' ----
0008 AF00        R     MOV     R7,Z+01H
000A 120000      R     LCALL   L?0048
                                           ; SOURCE LINE # 179
000D AF00        R     MOV     R7,Z
000F 120000      R     LCALL   L?0048
                                           ; SOURCE LINE # 180
0012 AF00        R     MOV     R7,Z+03H
0014 120000      R     LCALL   L?0049
                                           ; SOURCE LINE # 181
0017 AF00        R     MOV     R7,Z+02H
0019 120000      R     LCALL   L?0049
                                           ; SOURCE LINE # 183
C51 COMPILER V7.50   MAIN                                                                  09/24/2009 11:36:55 PAGE 18  

001C AF00        R     MOV     R7,Z+05H
001E 120000      R     LCALL   L?0049
                                           ; SOURCE LINE # 184
0021 AF00        R     MOV     R7,Z+04H
0023 120000      R     LCALL   L?0049
                                           ; SOURCE LINE # 185
0026 AF00        R     MOV     R7,Z+07H
0028 120000      R     LCALL   L?0049
                                           ; SOURCE LINE # 186
002B AF00        R     MOV     R7,Z+06H
002D 120000      R     LCALL   L?0049
                                           ; SOURCE LINE # 188
0030 AF00        R     MOV     R7,cc
0032 020000      R     LJMP    _Tx_byte
             ; FUNCTION Tx_means (END)

             ; FUNCTION L?0048 (BEGIN)
0000         L?0049:
0000 EF                MOV     A,R7
0001 2500        R     ADD     A,cc
0003 F500        R     MOV     cc,A
             ; FUNCTION _Tx_byte (BEGIN)
                                           ; SOURCE LINE # 191
;---- Variable 'outbyte' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 192
                                           ; SOURCE LINE # 193
0005 8F99              MOV     SBUF,R7
0007         ?C0041:
                                           ; SOURCE LINE # 194
0007 3099FD            JNB     TI,?C0041
000A         ?C0042:
                                           ; SOURCE LINE # 195
000A C299              CLR     TI
                                           ; SOURCE LINE # 196
000C 22                RET     
             ; FUNCTION _Tx_byte (END)

C51 COMPILER V7.50   MAIN                                                                  09/24/2009 11:36:55 PAGE 19  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


Buff . . . . . . . . . . . . . . . . .  PUBLIC   IDATA  ARRAY    0000H  200
EA . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AFH  1
IE . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A8H  1
MEASURE. . . . . . . . . . . . . . . .  * TAG *  -----  STRUCT   -----  8
  T1X. . . . . . . . . . . . . . . . .  MEMBER   -----  UNION    0000H  2
  T2X. . . . . . . . . . . . . . . . .  MEMBER   -----  UNION    0002H  2
  T1Y. . . . . . . . . . . . . . . . .  MEMBER   -----  UNION    0004H  2
  T2Y. . . . . . . . . . . . . . . . .  MEMBER   -----  UNION    0006H  2
TI . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0099H  1
n1 . . . . . . . . . . . . . . . . . .  PUBLIC   DATA   U_INT    0000H  2
n2 . . . . . . . . . . . . . . . . . .  PUBLIC   DATA   U_INT    0002H  2
I2CCON . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E8H  1
n3 . . . . . . . . . . . . . . . . . .  PUBLIC   DATA   U_INT    0004H  2
n4 . . . . . . . . . . . . . . . . . .  PUBLIC   DATA   U_INT    0006H  2
u_int. . . . . . . . . . . . . . . . .  * TAG *  -----  UNION    -----  2
  du_i . . . . . . . . . . . . . . . .  MEMBER   -----  U_INT    0000H  2
  du_c . . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0000H  2
RCAP2H . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CBH  1
s1 . . . . . . . . . . . . . . . . . .  PUBLIC   DATA   U_LONG   0008H  4
s2 . . . . . . . . . . . . . . . . . .  PUBLIC   DATA   U_LONG   000CH  4
DCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E8H  1
s3 . . . . . . . . . . . . . . . . . .  PUBLIC   DATA   U_LONG   0010H  4
RCAP2L . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CAH  1
main . . . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
s4 . . . . . . . . . . . . . . . . . .  PUBLIC   DATA   U_LONG   0014H  4
P10. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0090H  1
SBUF . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0099H  1
P11. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0091H  1
SCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0098H  1
TMOD . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0089H  1
one. . . . . . . . . . . . . . . . . .  PUBLIC   DATA   STRUCT   0018H  8
_Tx_byte . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0005H  -----
  outbyte. . . . . . . . . . . . . . .  * REG *  DATA   CHAR     0007H  1
Tx_means . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  d. . . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
  cc . . . . . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0000H  1
WDWR . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C0H  1
PLLCON . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D7H  1
TH0. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008CH  1
TH2. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CDH  1
TL0. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008AH  1
TL2. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CCH  1
TR0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008CH  1
TR2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CAH  1
Z. . . . . . . . . . . . . . . . . . .  PUBLIC   DATA   STRUCT   0020H  8
WDE. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C1H  1
get_one. . . . . . . . . . . . . . . .  PUBLIC   DATA   U_CHAR   0028H  1
T2CON. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C8H  1
i. . . . . . . . . . . . . . . . . . .  PUBLIC   DATA   U_CHAR   0029H  1
meas_xy. . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
WDCON. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C0H  1


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    802    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
C51 COMPILER V7.50   MAIN                                                                  09/24/2009 11:36:55 PAGE 20  

   DATA SIZE        =     42       1
   IDATA SIZE       =    200    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
